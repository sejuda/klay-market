{"ast":null,"code":"'use strict';\n\nconst {\n  objectToQuery\n} = require('./lib/querystring');\n\nconst configure = require('./lib/configure');\n\nconst {\n  ok\n} = require('./lib/fetch');\n\nconst toCamel = require('./lib/to-camel');\n\nmodule.exports = configure(({\n  fetch,\n  apiUrl,\n  apiPath,\n  headers\n}) => {\n  return (path, options) => async function* () {\n    options = options || {};\n    const qs = objectToQuery({\n      arg: path.toString(),\n      ...(options.qs || {})\n    });\n    const url = `${apiUrl}${apiPath}/ls${qs}`;\n    const res = await ok(fetch(url, {\n      signal: options.signal,\n      headers: options.headers || headers\n    }));\n    const data = await res.json();\n    const list = ((data.Objects || [])[0] || {}).Links || [];\n\n    for (const link of list) {\n      yield toCamel(link);\n    }\n  }();\n});","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/ipfs-http-client-lite/src/ls.js"],"names":["objectToQuery","require","configure","ok","toCamel","module","exports","fetch","apiUrl","apiPath","headers","path","options","qs","arg","toString","url","res","signal","data","json","list","Objects","Links","link"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,mBAAD,CAAjC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,iBAAD,CAAzB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAASF,OAAO,CAAC,aAAD,CAAtB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,gBAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAAC,CAAC;AAAEK,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAClE,SAAO,CAACC,IAAD,EAAOC,OAAP,KAAoB,mBAAoB;AAC7CA,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMC,EAAE,GAAGb,aAAa,CAAC;AACvBc,MAAAA,GAAG,EAAEH,IAAI,CAACI,QAAL,EADkB;AAEvB,UAAIH,OAAO,CAACC,EAAR,IAAc,EAAlB;AAFuB,KAAD,CAAxB;AAKA,UAAMG,GAAG,GAAI,GAAER,MAAO,GAAEC,OAAQ,MAAKI,EAAG,EAAxC;AACA,UAAMI,GAAG,GAAG,MAAMd,EAAE,CAACI,KAAK,CAACS,GAAD,EAAM;AAC9BE,MAAAA,MAAM,EAAEN,OAAO,CAACM,MADc;AAE9BR,MAAAA,OAAO,EAAEE,OAAO,CAACF,OAAR,IAAmBA;AAFE,KAAN,CAAN,CAApB;AAIA,UAAMS,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,UAAMC,IAAI,GAAG,CAAC,CAACF,IAAI,CAACG,OAAL,IAAgB,EAAjB,EAAqB,CAArB,KAA2B,EAA5B,EAAgCC,KAAhC,IAAyC,EAAtD;;AAEA,SAAK,MAAMC,IAAX,IAAmBH,IAAnB,EAAyB;AACvB,YAAMjB,OAAO,CAACoB,IAAD,CAAb;AACD;AACF,GApByB,EAA1B;AAqBD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst { objectToQuery } = require('./lib/querystring')\nconst configure = require('./lib/configure')\nconst { ok } = require('./lib/fetch')\nconst toCamel = require('./lib/to-camel')\n\nmodule.exports = configure(({ fetch, apiUrl, apiPath, headers }) => {\n  return (path, options) => (async function * () {\n    options = options || {}\n\n    const qs = objectToQuery({\n      arg: path.toString(),\n      ...(options.qs || {})\n    })\n\n    const url = `${apiUrl}${apiPath}/ls${qs}`\n    const res = await ok(fetch(url, {\n      signal: options.signal,\n      headers: options.headers || headers\n    }))\n    const data = await res.json()\n\n    const list = ((data.Objects || [])[0] || {}).Links || []\n\n    for (const link of list) {\n      yield toCamel(link)\n    }\n  })()\n})\n"]},"metadata":{},"sourceType":"script"}