{"ast":null,"code":"/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-eth/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nconst _ = require('lodash');\n\nconst util = require('util');\n\nconst core = require('../../caver-core');\n\nconst {\n  formatters\n} = require('../../caver-core-helpers');\n\nconst Subscriptions = require('../../caver-core-subscriptions').subscriptions;\n\nconst Method = require('../../caver-core-method');\n\nconst utils = require('../../caver-utils');\n\nconst Net = require('../../caver-net');\n\nconst Personal = require('../caver-klay-personal');\n\nconst BaseContract = require('../../caver-contract');\n\nconst KIP7 = require('../../caver-kct/src/kip7');\n\nconst KIP17 = require('../../caver-kct/src/kip17');\n\nconst Accounts = require('../caver-klay-accounts');\n\nconst abi = require('../../caver-abi');\n\nconst getNetworkType = require('./getNetworkType.js');\n\nconst rpcCalls = require('../../caver-rtm');\n\nconst {\n  decodeFromRawTransaction\n} = require('../caver-klay-accounts/src/makeRawTransaction');\n\nconst Klay = function Klay(...args) {\n  const _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, args); // overwrite package setRequestManager\n\n  const setRequestManager = this.setRequestManager;\n\n  this.setRequestManager = function (manager) {\n    setRequestManager(manager);\n\n    _this.net.setRequestManager(manager);\n\n    _this.personal.setRequestManager(manager);\n\n    _this.accounts.setRequestManager(manager);\n\n    _this.Contract._requestManager = _this._requestManager;\n    _this.Contract.currentProvider = _this._provider;\n    return true;\n  }; // overwrite setProvider\n\n\n  const setProvider = this.setProvider;\n\n  this.setProvider = function (...arg) {\n    setProvider.apply(_this, arg);\n\n    _this.setRequestManager(_this._requestManager);\n  };\n\n  let defaultAccount = null;\n  let defaultBlock = 'latest';\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      } // also set on the Contract object\n\n\n      _this.Contract.defaultAccount = defaultAccount;\n      _this.personal.defaultAccount = defaultAccount; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      if (!utils.isValidBlockNumberCandidate(val)) {\n        throw new Error('Invalid default block number.');\n      }\n\n      defaultBlock = val; // also set on the Contract object\n\n      _this.Contract.defaultBlock = defaultBlock;\n      _this.personal.defaultBlock = defaultBlock; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  this.clearSubscriptions = _this._requestManager.clearSubscriptions;\n  this.decodeTransaction = decodeFromRawTransaction; // add net\n\n  this.net = new Net(this); // add chain detection\n\n  this.net.getNetworkType = getNetworkType.bind(this); // add accounts\n\n  this.accounts = new Accounts(this); // add personal\n\n  this.personal = new Personal(this);\n  this.personal.defaultAccount = this.defaultAccount; // create a proxy Contract type for this instance, as a Contract's provider\n  // is stored as a class member rather than an instance variable. If we do\n  // not create this proxy type, changing the provider in one instance of\n  // caver-klay would subsequently change the provider for _all_ contract\n  // instances!\n\n  const self = this;\n\n  const Contract = function Contract() {\n    BaseContract.apply(this, arguments); // when Klay.setProvider is called, call packageInit\n    // on all contract instances instantiated via this Klay\n    // instances. This will update the currentProvider for\n    // the contract instances\n\n    const _this = this; // eslint-disable-line no-shadow\n\n\n    const setProvider = self.setProvider; // eslint-disable-line no-shadow\n\n    self.setProvider = function () {\n      setProvider.apply(self, arguments);\n      core.packageInit(_this, [self]);\n    };\n  };\n\n  Contract.setProvider = function () {\n    BaseContract.setProvider.apply(this, arguments);\n  }; // make our proxy Contract inherit from caver-contract so that it has all\n  // the right functionality and so that instanceof and friends work properly\n\n\n  Contract.prototype = Object.create(BaseContract.prototype);\n  Contract.prototype.constructor = Contract; // add contract\n\n  this.Contract = Contract;\n  this.Contract.defaultAccount = this.defaultAccount;\n  this.Contract.defaultBlock = this.defaultBlock;\n  this.Contract._requestManager = this._requestManager;\n  this.Contract._klayAccounts = this.accounts;\n  this.Contract.currentProvider = this._requestManager.provider;\n  this.KIP7 = KIP7;\n  this.KIP7.defaultAccount = this.defaultAccount;\n  this.KIP7.defaultBlock = this.defaultBlock;\n  this.KIP7._requestManager = this._requestManager;\n  this.KIP7._klayAccounts = this.accounts;\n  this.KIP7.currentProvider = this._requestManager.provider;\n  const kip7Deprecated = '`caver.klay.KIP7` has been deprecated. `caver.klay.KIP7` works using only `caver.klay.accounts.wallet`. If you are using `caver.wallet` then use `caver.kct.kip7`.'; // Overwrite constructor with deprecate warning\n\n  this.KIP7 = util.deprecate(this.KIP7, kip7Deprecated); // Overwrite static deloy method with deprecate warning\n\n  this.KIP7.deploy = util.deprecate(this.KIP7.deploy, kip7Deprecated);\n  this.KIP17 = KIP17;\n  this.KIP17.defaultAccount = this.defaultAccount;\n  this.KIP17.defaultBlock = this.defaultBlock;\n  this.KIP17._requestManager = this._requestManager;\n  this.KIP17._klayAccounts = this.accounts;\n  this.KIP17.currentProvider = this._requestManager.provider;\n  const kip17Deprecated = '`caver.klay.KIP17` has been deprecated. `caver.klay.KIP17` works using only `caver.klay.accounts.wallet`. If you are using `caver.wallet` then use `caver.kct.kip17`.'; // Overwrite constructor with deprecate warning\n\n  this.KIP17 = util.deprecate(KIP17, kip17Deprecated); // Overwrite static deloy method with deprecate warning\n\n  this.KIP17.deploy = util.deprecate(this.KIP17.deploy, kip17Deprecated); // add IBAN\n\n  this.Iban = utils.Iban; // add ABI\n\n  this.abi = abi;\n  const methods = [...rpcCalls.map(item => new Method(item)), // subscriptions\n  new Subscriptions({\n    name: 'subscribe',\n    type: 'klay',\n    subscriptions: {\n      newBlockHeaders: {\n        // TODO rename on RPC side?\n        subscriptionName: 'newHeads',\n        // replace subscription with this name\n        params: 0,\n        outputFormatter: formatters.outputBlockFormatter\n      },\n      pendingTransactions: {\n        subscriptionName: 'newPendingTransactions',\n        // replace subscription with this name\n        params: 0\n      },\n      logs: {\n        params: 1,\n        inputFormatter: [formatters.inputLogFormatter],\n        outputFormatter: formatters.outputLogFormatter,\n        // DUBLICATE, also in caver-contract\n        subscriptionHandler: function (output) {\n          this.emit('data', output);\n\n          if (_.isFunction(this.callback)) {\n            this.callback(null, output, this);\n          }\n        }\n      },\n      syncing: {\n        params: 0,\n        outputFormatter: formatters.outputSyncingFormatter,\n        subscriptionHandler: function (output) {\n          const _this = this;\n          /* eslint-disable-line no-shadow */\n          // fire TRUE at start\n\n\n          if (this._isSyncing !== true) {\n            this._isSyncing = true;\n            this.emit('changed', _this._isSyncing);\n\n            if (_.isFunction(this.callback)) {\n              this.callback(null, _this._isSyncing, this);\n            }\n\n            setTimeout(function () {\n              _this.emit('data', output);\n\n              if (_.isFunction(_this.callback)) {\n                _this.callback(null, output, _this);\n              }\n            }, 0); // fire sync status\n          } else {\n            this.emit('data', output);\n\n            if (_.isFunction(_this.callback)) {\n              this.callback(null, output, this);\n            } // wait for some time before fireing the FALSE\n\n\n            clearTimeout(this._isSyncingTimeout);\n            this._isSyncingTimeout = setTimeout(function () {\n              if (output.currentBlock > output.highestBlock - 200) {\n                _this._isSyncing = false;\n\n                _this.emit('changed', _this._isSyncing);\n\n                if (_.isFunction(_this.callback)) {\n                  _this.callback(null, _this._isSyncing, _this);\n                }\n              }\n            }, 500);\n          }\n        }\n      }\n    }\n  })];\n  methods.forEach(function (method) {\n    method.attachToObject(_this); // second param is the klay.accounts module (necessary for signing transactions locally)\n\n    method.setRequestManager(_this._requestManager, _this.accounts);\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n  });\n};\n\nmodule.exports = Klay;","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-klay/src/index.js"],"names":["_","require","util","core","formatters","Subscriptions","subscriptions","Method","utils","Net","Personal","BaseContract","KIP7","KIP17","Accounts","abi","getNetworkType","rpcCalls","decodeFromRawTransaction","Klay","args","_this","packageInit","setRequestManager","manager","net","personal","accounts","Contract","_requestManager","currentProvider","_provider","setProvider","arg","apply","defaultAccount","defaultBlock","Object","defineProperty","get","set","val","toChecksumAddress","inputAddressFormatter","methods","forEach","method","enumerable","isValidBlockNumberCandidate","Error","clearSubscriptions","decodeTransaction","bind","self","arguments","prototype","create","constructor","_klayAccounts","provider","kip7Deprecated","deprecate","deploy","kip17Deprecated","Iban","map","item","name","type","newBlockHeaders","subscriptionName","params","outputFormatter","outputBlockFormatter","pendingTransactions","logs","inputFormatter","inputLogFormatter","outputLogFormatter","subscriptionHandler","output","emit","isFunction","callback","syncing","outputSyncingFormatter","_isSyncing","setTimeout","clearTimeout","_isSyncingTimeout","currentBlock","highestBlock","attachToObject","module","exports"],"mappings":"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","sourcesContent":["/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-eth/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nconst _ = require('lodash')\nconst util = require('util')\n\nconst core = require('../../caver-core')\nconst { formatters } = require('../../caver-core-helpers')\nconst Subscriptions = require('../../caver-core-subscriptions').subscriptions\nconst Method = require('../../caver-core-method')\nconst utils = require('../../caver-utils')\nconst Net = require('../../caver-net')\n\nconst Personal = require('../caver-klay-personal')\nconst BaseContract = require('../../caver-contract')\nconst KIP7 = require('../../caver-kct/src/kip7')\nconst KIP17 = require('../../caver-kct/src/kip17')\nconst Accounts = require('../caver-klay-accounts')\nconst abi = require('../../caver-abi')\nconst getNetworkType = require('./getNetworkType.js')\n\nconst rpcCalls = require('../../caver-rtm')\n\nconst { decodeFromRawTransaction } = require('../caver-klay-accounts/src/makeRawTransaction')\n\nconst Klay = function Klay(...args) {\n    const _this = this\n\n    // sets _requestmanager\n    core.packageInit(this, args)\n\n    // overwrite package setRequestManager\n    const setRequestManager = this.setRequestManager\n    this.setRequestManager = function(manager) {\n        setRequestManager(manager)\n\n        _this.net.setRequestManager(manager)\n        _this.personal.setRequestManager(manager)\n        _this.accounts.setRequestManager(manager)\n        _this.Contract._requestManager = _this._requestManager\n        _this.Contract.currentProvider = _this._provider\n\n        return true\n    }\n\n    // overwrite setProvider\n    const setProvider = this.setProvider\n    this.setProvider = function(...arg) {\n        setProvider.apply(_this, arg)\n        _this.setRequestManager(_this._requestManager)\n    }\n\n    let defaultAccount = null\n    let defaultBlock = 'latest'\n\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function() {\n            return defaultAccount\n        },\n        set: function(val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val))\n            }\n\n            // also set on the Contract object\n            _this.Contract.defaultAccount = defaultAccount\n            _this.personal.defaultAccount = defaultAccount\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultAccount = defaultAccount\n            })\n\n            return val\n        },\n        enumerable: true,\n    })\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function() {\n            return defaultBlock\n        },\n        set: function(val) {\n            if (!utils.isValidBlockNumberCandidate(val)) {\n                throw new Error('Invalid default block number.')\n            }\n            defaultBlock = val\n            // also set on the Contract object\n            _this.Contract.defaultBlock = defaultBlock\n            _this.personal.defaultBlock = defaultBlock\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultBlock = defaultBlock\n            })\n\n            return val\n        },\n        enumerable: true,\n    })\n\n    this.clearSubscriptions = _this._requestManager.clearSubscriptions\n\n    this.decodeTransaction = decodeFromRawTransaction\n\n    // add net\n    this.net = new Net(this)\n    // add chain detection\n    this.net.getNetworkType = getNetworkType.bind(this)\n\n    // add accounts\n    this.accounts = new Accounts(this)\n\n    // add personal\n    this.personal = new Personal(this)\n    this.personal.defaultAccount = this.defaultAccount\n\n    // create a proxy Contract type for this instance, as a Contract's provider\n    // is stored as a class member rather than an instance variable. If we do\n    // not create this proxy type, changing the provider in one instance of\n    // caver-klay would subsequently change the provider for _all_ contract\n    // instances!\n    const self = this\n    const Contract = function Contract() {\n        BaseContract.apply(this, arguments)\n\n        // when Klay.setProvider is called, call packageInit\n        // on all contract instances instantiated via this Klay\n        // instances. This will update the currentProvider for\n        // the contract instances\n        const _this = this // eslint-disable-line no-shadow\n        const setProvider = self.setProvider // eslint-disable-line no-shadow\n        self.setProvider = function() {\n            setProvider.apply(self, arguments)\n            core.packageInit(_this, [self])\n        }\n    }\n\n    Contract.setProvider = function() {\n        BaseContract.setProvider.apply(this, arguments)\n    }\n\n    // make our proxy Contract inherit from caver-contract so that it has all\n    // the right functionality and so that instanceof and friends work properly\n    Contract.prototype = Object.create(BaseContract.prototype)\n    Contract.prototype.constructor = Contract\n\n    // add contract\n    this.Contract = Contract\n    this.Contract.defaultAccount = this.defaultAccount\n    this.Contract.defaultBlock = this.defaultBlock\n    this.Contract._requestManager = this._requestManager\n    this.Contract._klayAccounts = this.accounts\n    this.Contract.currentProvider = this._requestManager.provider\n\n    this.KIP7 = KIP7\n    this.KIP7.defaultAccount = this.defaultAccount\n    this.KIP7.defaultBlock = this.defaultBlock\n    this.KIP7._requestManager = this._requestManager\n    this.KIP7._klayAccounts = this.accounts\n    this.KIP7.currentProvider = this._requestManager.provider\n\n    const kip7Deprecated =\n        '`caver.klay.KIP7` has been deprecated. `caver.klay.KIP7` works using only `caver.klay.accounts.wallet`. If you are using `caver.wallet` then use `caver.kct.kip7`.'\n    // Overwrite constructor with deprecate warning\n    this.KIP7 = util.deprecate(this.KIP7, kip7Deprecated)\n\n    // Overwrite static deloy method with deprecate warning\n    this.KIP7.deploy = util.deprecate(this.KIP7.deploy, kip7Deprecated)\n\n    this.KIP17 = KIP17\n    this.KIP17.defaultAccount = this.defaultAccount\n    this.KIP17.defaultBlock = this.defaultBlock\n    this.KIP17._requestManager = this._requestManager\n    this.KIP17._klayAccounts = this.accounts\n    this.KIP17.currentProvider = this._requestManager.provider\n\n    const kip17Deprecated =\n        '`caver.klay.KIP17` has been deprecated. `caver.klay.KIP17` works using only `caver.klay.accounts.wallet`. If you are using `caver.wallet` then use `caver.kct.kip17`.'\n    // Overwrite constructor with deprecate warning\n    this.KIP17 = util.deprecate(KIP17, kip17Deprecated)\n\n    // Overwrite static deloy method with deprecate warning\n    this.KIP17.deploy = util.deprecate(this.KIP17.deploy, kip17Deprecated)\n\n    // add IBAN\n    this.Iban = utils.Iban\n\n    // add ABI\n    this.abi = abi\n\n    const methods = [\n        ...rpcCalls.map(item => new Method(item)),\n        // subscriptions\n        new Subscriptions({\n            name: 'subscribe',\n            type: 'klay',\n            subscriptions: {\n                newBlockHeaders: {\n                    // TODO rename on RPC side?\n                    subscriptionName: 'newHeads', // replace subscription with this name\n                    params: 0,\n                    outputFormatter: formatters.outputBlockFormatter,\n                },\n                pendingTransactions: {\n                    subscriptionName: 'newPendingTransactions', // replace subscription with this name\n                    params: 0,\n                },\n                logs: {\n                    params: 1,\n                    inputFormatter: [formatters.inputLogFormatter],\n                    outputFormatter: formatters.outputLogFormatter,\n                    // DUBLICATE, also in caver-contract\n                    subscriptionHandler: function(output) {\n                        this.emit('data', output)\n\n                        if (_.isFunction(this.callback)) {\n                            this.callback(null, output, this)\n                        }\n                    },\n                },\n                syncing: {\n                    params: 0,\n                    outputFormatter: formatters.outputSyncingFormatter,\n                    subscriptionHandler: function(output) {\n                        const _this = this /* eslint-disable-line no-shadow */\n\n                        // fire TRUE at start\n                        if (this._isSyncing !== true) {\n                            this._isSyncing = true\n                            this.emit('changed', _this._isSyncing)\n\n                            if (_.isFunction(this.callback)) {\n                                this.callback(null, _this._isSyncing, this)\n                            }\n\n                            setTimeout(function() {\n                                _this.emit('data', output)\n\n                                if (_.isFunction(_this.callback)) {\n                                    _this.callback(null, output, _this)\n                                }\n                            }, 0)\n\n                            // fire sync status\n                        } else {\n                            this.emit('data', output)\n                            if (_.isFunction(_this.callback)) {\n                                this.callback(null, output, this)\n                            }\n\n                            // wait for some time before fireing the FALSE\n                            clearTimeout(this._isSyncingTimeout)\n                            this._isSyncingTimeout = setTimeout(function() {\n                                if (output.currentBlock > output.highestBlock - 200) {\n                                    _this._isSyncing = false\n                                    _this.emit('changed', _this._isSyncing)\n\n                                    if (_.isFunction(_this.callback)) {\n                                        _this.callback(null, _this._isSyncing, _this)\n                                    }\n                                }\n                            }, 500)\n                        }\n                    },\n                },\n            },\n        }),\n    ]\n\n    methods.forEach(function(method) {\n        method.attachToObject(_this)\n        // second param is the klay.accounts module (necessary for signing transactions locally)\n        method.setRequestManager(_this._requestManager, _this.accounts)\n        method.defaultBlock = _this.defaultBlock\n        method.defaultAccount = _this.defaultAccount\n    })\n}\n\nmodule.exports = Klay\n"]},"metadata":{},"sourceType":"script"}