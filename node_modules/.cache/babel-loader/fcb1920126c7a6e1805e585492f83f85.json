{"ast":null,"code":"/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst RLP = require('eth-lib/lib/rlp');\n\nconst Bytes = require('eth-lib/lib/bytes');\n\nconst helpers = require('../../../../caver-core-helpers');\n\nconst {\n  CHAIN_DATA_ANCHORING_TYPE_TAG\n} = helpers.constants;\n\nfunction rlpEncodeForChainDataAnchoring(transaction) {\n  return RLP.encode([RLP.encode([CHAIN_DATA_ANCHORING_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.from.toLowerCase(), Bytes.fromNat(transaction.data)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForChainDataAnchoring\n};","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/serviceChain.js"],"names":["RLP","require","Bytes","helpers","CHAIN_DATA_ANCHORING_TYPE_TAG","constants","rlpEncodeForChainDataAnchoring","transaction","encode","fromNat","nonce","gasPrice","gas","from","toLowerCase","data","chainId","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,gCAAD,CAAvB;;AAEA,MAAM;AAAEG,EAAAA;AAAF,IAAoCD,OAAO,CAACE,SAAlD;;AAEA,SAASC,8BAAT,CAAwCC,WAAxC,EAAqD;AACjD,SAAOP,GAAG,CAACQ,MAAJ,CAAW,CACdR,GAAG,CAACQ,MAAJ,CAAW,CACPJ,6BADO,EAEPF,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACG,KAA1B,CAFO,EAGPR,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACI,QAA1B,CAHO,EAIPT,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACK,GAA1B,CAJO,EAKPL,WAAW,CAACM,IAAZ,CAAiBC,WAAjB,EALO,EAMPZ,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACQ,IAA1B,CANO,CAAX,CADc,EASdb,KAAK,CAACO,OAAN,CAAcF,WAAW,CAACS,OAAZ,IAAuB,KAArC,CATc,EAUd,IAVc,EAWd,IAXc,CAAX,CAAP;AAaH;;AAEDC,MAAM,CAACC,OAAP,GAAiB;AACbZ,EAAAA;AADa,CAAjB","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RLP = require('eth-lib/lib/rlp')\nconst Bytes = require('eth-lib/lib/bytes')\nconst helpers = require('../../../../caver-core-helpers')\n\nconst { CHAIN_DATA_ANCHORING_TYPE_TAG } = helpers.constants\n\nfunction rlpEncodeForChainDataAnchoring(transaction) {\n    return RLP.encode([\n        RLP.encode([\n            CHAIN_DATA_ANCHORING_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.from.toLowerCase(),\n            Bytes.fromNat(transaction.data),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nmodule.exports = {\n    rlpEncodeForChainDataAnchoring,\n}\n"]},"metadata":{},"sourceType":"script"}