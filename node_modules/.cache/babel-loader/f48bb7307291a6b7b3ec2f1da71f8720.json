{"ast":null,"code":"/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-eth-personal/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nconst core = require('../../../caver-core');\n\nconst Method = require('../../../caver-core-method');\n\nconst utils = require('../../../caver-utils');\n\nconst Net = require('../../../caver-net');\n\nconst formatters = require('../../../caver-core-helpers').formatters;\n\nconst rpc = require('../../../caver-rtm').rpc;\n\nconst Personal = function Personal(...args) {\n  const _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, args);\n  this.net = new Net(this);\n  let defaultAccount = null;\n  let defaultBlock = 'latest';\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      } // update defaultBlock\n\n\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      if (!utils.isValidBlockNumberCandidate(val)) {\n        throw new Error('Invalid default block number.');\n      }\n\n      defaultBlock = val; // update defaultBlock\n\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  const methods = [rpc.personal.getAccounts, rpc.personal.newAccount, rpc.personal.unlockAccount, rpc.personal.lockAccount, rpc.personal.importRawKey, rpc.personal.sendTransaction, rpc.personal.signTransaction, rpc.personal.sign, rpc.personal.ecRecover, rpc.personal.replaceRawKey, rpc.personal.sendValueTransfer, rpc.personal.sendAccountUpdate];\n  methods.forEach(function (method) {\n    method = new Method(method);\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n  });\n};\n\nmodule.exports = Personal;","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-klay/caver-klay-personal/src/index.js"],"names":["core","require","Method","utils","Net","formatters","rpc","Personal","args","_this","packageInit","net","defaultAccount","defaultBlock","Object","defineProperty","get","set","val","toChecksumAddress","inputAddressFormatter","methods","forEach","method","enumerable","isValidBlockNumberCandidate","Error","personal","getAccounts","newAccount","unlockAccount","lockAccount","importRawKey","sendTransaction","signTransaction","sign","ecRecover","replaceRawKey","sendValueTransfer","sendAccountUpdate","attachToObject","setRequestManager","_requestManager","module","exports"],"mappings":"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","sourcesContent":["/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-eth-personal/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nconst core = require('../../../caver-core')\nconst Method = require('../../../caver-core-method')\nconst utils = require('../../../caver-utils')\nconst Net = require('../../../caver-net')\n\nconst formatters = require('../../../caver-core-helpers').formatters\nconst rpc = require('../../../caver-rtm').rpc\n\nconst Personal = function Personal(...args) {\n    const _this = this\n\n    // sets _requestmanager\n    core.packageInit(this, args)\n\n    this.net = new Net(this)\n\n    let defaultAccount = null\n    let defaultBlock = 'latest'\n\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function() {\n            return defaultAccount\n        },\n        set: function(val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val))\n            }\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultAccount = defaultAccount\n            })\n\n            return val\n        },\n        enumerable: true,\n    })\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function() {\n            return defaultBlock\n        },\n        set: function(val) {\n            if (!utils.isValidBlockNumberCandidate(val)) {\n                throw new Error('Invalid default block number.')\n            }\n            defaultBlock = val\n\n            // update defaultBlock\n            methods.forEach(function(method) {\n                method.defaultBlock = defaultBlock\n            })\n\n            return val\n        },\n        enumerable: true,\n    })\n\n    const methods = [\n        rpc.personal.getAccounts,\n        rpc.personal.newAccount,\n        rpc.personal.unlockAccount,\n        rpc.personal.lockAccount,\n        rpc.personal.importRawKey,\n        rpc.personal.sendTransaction,\n        rpc.personal.signTransaction,\n        rpc.personal.sign,\n        rpc.personal.ecRecover,\n        rpc.personal.replaceRawKey,\n        rpc.personal.sendValueTransfer,\n        rpc.personal.sendAccountUpdate,\n    ]\n    methods.forEach(function(method) {\n        method = new Method(method)\n        method.attachToObject(_this)\n        method.setRequestManager(_this._requestManager)\n        method.defaultBlock = _this.defaultBlock\n        method.defaultAccount = _this.defaultAccount\n    })\n}\n\nmodule.exports = Personal\n"]},"metadata":{},"sourceType":"script"}