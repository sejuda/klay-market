{"ast":null,"code":"'use strict';\n/* eslint-env browser */\n\nconst normaliseInput = require('./normalise-input');\n\nexports.toFormData = async input => {\n  const files = normaliseInput(input);\n  const formData = new FormData();\n  let i = 0;\n\n  for await (const file of files) {\n    if (file.content) {\n      // In the browser there's _currently_ no streaming upload, buffer up our\n      // async iterator chunks and append a big Blob :(\n      // One day, this will be browser streams\n      const bufs = [];\n\n      for await (const chunk of file.content) {\n        bufs.push(Buffer.isBuffer(chunk) ? chunk.buffer : chunk);\n      }\n\n      formData.append(`file-${i}`, new Blob(bufs, {\n        type: 'application/octet-stream'\n      }), file.path);\n    } else {\n      formData.append(`dir-${i}`, new Blob([], {\n        type: 'application/x-directory'\n      }), file.path);\n    }\n\n    i++;\n  }\n\n  return formData;\n};","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/ipfs-http-client-lite/src/add/form-data.browser.js"],"names":["normaliseInput","require","exports","toFormData","input","files","formData","FormData","i","file","content","bufs","chunk","push","Buffer","isBuffer","buffer","append","Blob","type","path"],"mappings":"AAAA;AACA;;AAEA,MAAMA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AAEAC,OAAO,CAACC,UAAR,GAAqB,MAAOC,KAAP,IAAiB;AACpC,QAAMC,KAAK,GAAGL,cAAc,CAACI,KAAD,CAA5B;AACA,QAAME,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,aAAW,MAAMC,IAAjB,IAAyBJ,KAAzB,EAAgC;AAC9B,QAAII,IAAI,CAACC,OAAT,EAAkB;AAChB;AACA;AACA;AACA,YAAMC,IAAI,GAAG,EAAb;;AACA,iBAAW,MAAMC,KAAjB,IAA0BH,IAAI,CAACC,OAA/B,EAAwC;AACtCC,QAAAA,IAAI,CAACE,IAAL,CAAUC,MAAM,CAACC,QAAP,CAAgBH,KAAhB,IAAyBA,KAAK,CAACI,MAA/B,GAAwCJ,KAAlD;AACD;;AAEDN,MAAAA,QAAQ,CAACW,MAAT,CAAiB,QAAOT,CAAE,EAA1B,EAA6B,IAAIU,IAAJ,CAASP,IAAT,EAAe;AAAEQ,QAAAA,IAAI,EAAE;AAAR,OAAf,CAA7B,EAAmFV,IAAI,CAACW,IAAxF;AACD,KAVD,MAUO;AACLd,MAAAA,QAAQ,CAACW,MAAT,CAAiB,OAAMT,CAAE,EAAzB,EAA4B,IAAIU,IAAJ,CAAS,EAAT,EAAa;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAb,CAA5B,EAA+EV,IAAI,CAACW,IAApF;AACD;;AAEDZ,IAAAA,CAAC;AACF;;AAED,SAAOF,QAAP;AACD,CAxBD","sourcesContent":["'use strict'\n/* eslint-env browser */\n\nconst normaliseInput = require('./normalise-input')\n\nexports.toFormData = async (input) => {\n  const files = normaliseInput(input)\n  const formData = new FormData()\n  let i = 0\n\n  for await (const file of files) {\n    if (file.content) {\n      // In the browser there's _currently_ no streaming upload, buffer up our\n      // async iterator chunks and append a big Blob :(\n      // One day, this will be browser streams\n      const bufs = []\n      for await (const chunk of file.content) {\n        bufs.push(Buffer.isBuffer(chunk) ? chunk.buffer : chunk)\n      }\n\n      formData.append(`file-${i}`, new Blob(bufs, { type: 'application/octet-stream' }), file.path)\n    } else {\n      formData.append(`dir-${i}`, new Blob([], { type: 'application/x-directory' }), file.path)\n    }\n\n    i++\n  }\n\n  return formData\n}\n"]},"metadata":{},"sourceType":"script"}