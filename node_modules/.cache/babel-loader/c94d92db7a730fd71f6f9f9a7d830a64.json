{"ast":null,"code":"'use strict';\n\nconst {\n  objectToQuery\n} = require('../lib/querystring');\n\nconst configure = require('../lib/configure');\n\nconst {\n  ok\n} = require('../lib/fetch');\n\nmodule.exports = configure(({\n  fetch,\n  apiUrl,\n  apiPath,\n  headers\n}) => {\n  return async (addrs, options) => {\n    addrs = Array.isArray(addrs) ? addrs : [addrs];\n    options = options || {};\n    const qs = objectToQuery({\n      arg: addrs.map(a => a.toString()),\n      ...(options.qs || {})\n    });\n    const url = `${apiUrl}${apiPath}/swarm/connect${qs}`;\n    const res = await ok(fetch(url, {\n      signal: options.signal,\n      headers: options.headers || headers\n    }));\n    const data = await res.json();\n    return (data || {}).Strings || [];\n  };\n});","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/ipfs-http-client-lite/src/swarm/connect.js"],"names":["objectToQuery","require","configure","ok","module","exports","fetch","apiUrl","apiPath","headers","addrs","options","Array","isArray","qs","arg","map","a","toString","url","res","signal","data","json","Strings"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,oBAAD,CAAjC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAASF,OAAO,CAAC,cAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAClE,SAAO,OAAOC,KAAP,EAAcC,OAAd,KAA0B;AAC/BD,IAAAA,KAAK,GAAGE,KAAK,CAACC,OAAN,CAAcH,KAAd,IAAuBA,KAAvB,GAA+B,CAACA,KAAD,CAAvC;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMG,EAAE,GAAGd,aAAa,CAAC;AACvBe,MAAAA,GAAG,EAAEL,KAAK,CAACM,GAAN,CAAUC,CAAC,IAAIA,CAAC,CAACC,QAAF,EAAf,CADkB;AAEvB,UAAIP,OAAO,CAACG,EAAR,IAAc,EAAlB;AAFuB,KAAD,CAAxB;AAKA,UAAMK,GAAG,GAAI,GAAEZ,MAAO,GAAEC,OAAQ,iBAAgBM,EAAG,EAAnD;AACA,UAAMM,GAAG,GAAG,MAAMjB,EAAE,CAACG,KAAK,CAACa,GAAD,EAAM;AAC9BE,MAAAA,MAAM,EAAEV,OAAO,CAACU,MADc;AAE9BZ,MAAAA,OAAO,EAAEE,OAAO,CAACF,OAAR,IAAmBA;AAFE,KAAN,CAAN,CAApB;AAIA,UAAMa,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,WAAQ,CAACD,IAAI,IAAI,EAAT,EAAaE,OAAb,IAAwB,EAAhC;AACD,GAjBD;AAkBD,CAnByB,CAA1B","sourcesContent":["'use strict'\n\nconst { objectToQuery } = require('../lib/querystring')\nconst configure = require('../lib/configure')\nconst { ok } = require('../lib/fetch')\n\nmodule.exports = configure(({ fetch, apiUrl, apiPath, headers }) => {\n  return async (addrs, options) => {\n    addrs = Array.isArray(addrs) ? addrs : [addrs]\n    options = options || {}\n\n    const qs = objectToQuery({\n      arg: addrs.map(a => a.toString()),\n      ...(options.qs || {})\n    })\n\n    const url = `${apiUrl}${apiPath}/swarm/connect${qs}`\n    const res = await ok(fetch(url, {\n      signal: options.signal,\n      headers: options.headers || headers\n    }))\n    const data = await res.json()\n\n    return ((data || {}).Strings || [])\n  }\n})\n"]},"metadata":{},"sourceType":"script"}