{"ast":null,"code":"import axios from \"axios\";\nimport { COUNT_CONTRACT_ADDRESS, MARKET_CONTRACT_ADDRESS, NFT_CONTRACT_ADDRESS } from \"../constants\";\nconst A2P_API_PREPARE_URL = \"https://a2a-api.klipwallet.com/v2/a2a/prepare\";\nconst APP_NAME = \"KLAY_MARKET\";\nconst isMobile = window.screen.width >= 1280 ? false : true;\n\nconst getKlipAccessUrl = (method, request_key) => {\n  if (method === \"QR\") {\n    return `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n  }\n\n  return `kakaotalk://klipwallet/open?url=https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n};\n\nexport const buyCard = async (tokenId, setQrvalue, callback) => {\n  const functionJson = '{ \"constant\": false, \"inputs\": [ { \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"name\": \"NFTAddress\", \"type\": \"address\" } ], \"name\": \"buyNFT\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }';\n  executeContract(MARKET_CONTRACT_ADDRESS, functionJson, \"10000000000000000\", `[\\\"${tokenId}\\\",\\\"${NFT_CONTRACT_ADDRESS}\\\"]`, setQrvalue, callback);\n};\nexport const listingCard = async (fromAddress, tokenId, setQrvalue, callback) => {\n  const functionJson = '{ \"constant\": false, \"inputs\": [ { \"name\": \"from\", \"type\": \"address\" }, { \"name\": \"to\", \"type\": \"address\" }, { \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(NFT_CONTRACT_ADDRESS, functionJson, \"0\", `[\\\"${fromAddress}\\\",\\\"${MARKET_CONTRACT_ADDRESS}\\\",\\\"${tokenId}\\\"]`, setQrvalue, callback);\n};\nexport const mintCardWithURI = async (toAddress, tokenId, uri, setQrvalue, callback) => {\n  const functionJson = '{ \"constant\": false, \"inputs\": [ { \"name\": \"to\", \"type\": \"address\" }, { \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"name\": \"tokenURI\", \"type\": \"string\" } ], \"name\": \"mintWithTokenURI\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(NFT_CONTRACT_ADDRESS, functionJson, \"0\", `[\\\"${toAddress}\\\",\\\"${tokenId}\\\",\\\"${uri}\\\"]`, setQrvalue, callback);\n};\nexport const executeContract = (txTo, functionJSON, value, params, setQrvalue, callback) => {\n  axios.post(A2P_API_PREPARE_URL, {\n    bapp: {\n      name: APP_NAME\n    },\n    type: \"execute_contract\",\n    transaction: {\n      to: txTo,\n      abi: functionJSON,\n      value: value,\n      params: params\n    }\n  }).then(response => {\n    const {\n      request_key\n    } = response.data;\n\n    if (isMobile) {\n      window.location.href = getKlipAccessUrl(\"android\", request_key);\n    } else {\n      setQrvalue(getKlipAccessUrl(\"QR\", request_key));\n    }\n\n    let timerId = setInterval(() => {\n      axios.get(`https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`).then(res => {\n        if (res.data.result) {\n          console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n          callback(res.data.result);\n          clearInterval(timerId);\n          setQrvalue(\"DEFAULT\");\n        }\n      });\n    }, 1000);\n  });\n};\nexport const getAddress = (setQrvalue, callback) => {\n  axios.post(A2P_API_PREPARE_URL, {\n    bapp: {\n      name: APP_NAME\n    },\n    type: \"auth\"\n  }).then(response => {\n    const {\n      request_key\n    } = response.data;\n\n    if (isMobile) {\n      window.location.href = getKlipAccessUrl(\"android\", request_key);\n    } else {\n      setQrvalue(getKlipAccessUrl(\"QR\", request_key));\n    }\n\n    let timerId = setInterval(() => {\n      axios.get(`https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`).then(res => {\n        if (res.data.result) {\n          console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n          callback(res.data.result.klaytn_address);\n          clearInterval(timerId);\n          setQrvalue(\"DEFAULT\");\n        }\n      });\n    }, 1000);\n  });\n}; // export const setCount = (count, setQrvalue) => {\n//   axios\n//     .post(A2P_API_PREPARE_URL, {\n//       bapp: {\n//         name: APP_NAME,\n//       },\n//       type: \"execute_contract\",\n//       transaction: {\n//         to: COUNT_CONTRACT_ADDRESS,\n//         abi:\n//           '{ \"constant\": false, \"inputs\": [ { \"name\": \"_count\", \"type\": \"uint256\" } ], \"name\": \"setCount\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }',\n//         value: \"0\",\n//         params: `[\\\"${count}\\\"]`,\n//       },\n//     })\n//     .then((response) => {\n//       const { request_key } = response.data;\n//       const qrcode = `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n//       setQrvalue(qrcode);\n//       let timerId = setInterval(() => {\n//         axios\n//           .get(\n//             `https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`\n//           )\n//           .then((res) => {\n//             if (res.data.result) {\n//               console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n//               clearInterval(timerId);\n//             }\n//           });\n//       }, 1000);\n//     });\n// };","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/src/api/UseKlip.js"],"names":["axios","COUNT_CONTRACT_ADDRESS","MARKET_CONTRACT_ADDRESS","NFT_CONTRACT_ADDRESS","A2P_API_PREPARE_URL","APP_NAME","isMobile","window","screen","width","getKlipAccessUrl","method","request_key","buyCard","tokenId","setQrvalue","callback","functionJson","executeContract","listingCard","fromAddress","mintCardWithURI","toAddress","uri","txTo","functionJSON","value","params","post","bapp","name","type","transaction","to","abi","then","response","data","location","href","timerId","setInterval","get","res","result","console","log","JSON","stringify","clearInterval","getAddress","klaytn_address"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  COUNT_CONTRACT_ADDRESS,\n  MARKET_CONTRACT_ADDRESS,\n  NFT_CONTRACT_ADDRESS,\n} from \"../constants\";\n\nconst A2P_API_PREPARE_URL = \"https://a2a-api.klipwallet.com/v2/a2a/prepare\";\nconst APP_NAME = \"KLAY_MARKET\";\nconst isMobile = window.screen.width >= 1280 ? false : true;\n\nconst getKlipAccessUrl = (method, request_key) => {\n  if (method === \"QR\") {\n    return `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n  }\n  return `kakaotalk://klipwallet/open?url=https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n};\nexport const buyCard = async (tokenId, setQrvalue, callback) => {\n  const functionJson =\n    '{ \"constant\": false, \"inputs\": [ { \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"name\": \"NFTAddress\", \"type\": \"address\" } ], \"name\": \"buyNFT\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": true, \"stateMutability\": \"payable\", \"type\": \"function\" }';\n  executeContract(\n    MARKET_CONTRACT_ADDRESS,\n    functionJson,\n    \"10000000000000000\",\n    `[\\\"${tokenId}\\\",\\\"${NFT_CONTRACT_ADDRESS}\\\"]`,\n    setQrvalue,\n    callback\n  );\n};\n\nexport const listingCard = async (\n  fromAddress,\n  tokenId,\n  setQrvalue,\n  callback\n) => {\n  const functionJson =\n    '{ \"constant\": false, \"inputs\": [ { \"name\": \"from\", \"type\": \"address\" }, { \"name\": \"to\", \"type\": \"address\" }, { \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(\n    NFT_CONTRACT_ADDRESS,\n    functionJson,\n    \"0\",\n    `[\\\"${fromAddress}\\\",\\\"${MARKET_CONTRACT_ADDRESS}\\\",\\\"${tokenId}\\\"]`,\n    setQrvalue,\n    callback\n  );\n};\n\nexport const mintCardWithURI = async (\n  toAddress,\n  tokenId,\n  uri,\n  setQrvalue,\n  callback\n) => {\n  const functionJson =\n    '{ \"constant\": false, \"inputs\": [ { \"name\": \"to\", \"type\": \"address\" }, { \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"name\": \"tokenURI\", \"type\": \"string\" } ], \"name\": \"mintWithTokenURI\", \"outputs\": [ { \"name\": \"\", \"type\": \"bool\" } ], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }';\n  executeContract(\n    NFT_CONTRACT_ADDRESS,\n    functionJson,\n    \"0\",\n    `[\\\"${toAddress}\\\",\\\"${tokenId}\\\",\\\"${uri}\\\"]`,\n    setQrvalue,\n    callback\n  );\n};\n\nexport const executeContract = (\n  txTo,\n  functionJSON,\n  value,\n  params,\n  setQrvalue,\n  callback\n) => {\n  axios\n    .post(A2P_API_PREPARE_URL, {\n      bapp: {\n        name: APP_NAME,\n      },\n      type: \"execute_contract\",\n      transaction: {\n        to: txTo,\n        abi: functionJSON,\n        value: value,\n        params: params,\n      },\n    })\n    .then((response) => {\n      const { request_key } = response.data;\n      if (isMobile) {\n        window.location.href = getKlipAccessUrl(\"android\", request_key);\n      } else {\n        setQrvalue(getKlipAccessUrl(\"QR\", request_key));\n      }\n\n      let timerId = setInterval(() => {\n        axios\n          .get(\n            `https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`\n          )\n          .then((res) => {\n            if (res.data.result) {\n              console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n              callback(res.data.result);\n              clearInterval(timerId);\n              setQrvalue(\"DEFAULT\");\n            }\n          });\n      }, 1000);\n    });\n};\n\nexport const getAddress = (setQrvalue, callback) => {\n  axios\n    .post(A2P_API_PREPARE_URL, {\n      bapp: {\n        name: APP_NAME,\n      },\n      type: \"auth\",\n    })\n    .then((response) => {\n      const { request_key } = response.data;\n      if (isMobile) {\n        window.location.href = getKlipAccessUrl(\"android\", request_key);\n      } else {\n        setQrvalue(getKlipAccessUrl(\"QR\", request_key));\n      }\n      let timerId = setInterval(() => {\n        axios\n          .get(\n            `https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`\n          )\n          .then((res) => {\n            if (res.data.result) {\n              console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n              callback(res.data.result.klaytn_address);\n              clearInterval(timerId);\n              setQrvalue(\"DEFAULT\");\n            }\n          });\n      }, 1000);\n    });\n};\n\n// export const setCount = (count, setQrvalue) => {\n//   axios\n//     .post(A2P_API_PREPARE_URL, {\n//       bapp: {\n//         name: APP_NAME,\n//       },\n//       type: \"execute_contract\",\n//       transaction: {\n//         to: COUNT_CONTRACT_ADDRESS,\n//         abi:\n//           '{ \"constant\": false, \"inputs\": [ { \"name\": \"_count\", \"type\": \"uint256\" } ], \"name\": \"setCount\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }',\n//         value: \"0\",\n//         params: `[\\\"${count}\\\"]`,\n//       },\n//     })\n//     .then((response) => {\n//       const { request_key } = response.data;\n//       const qrcode = `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n//       setQrvalue(qrcode);\n//       let timerId = setInterval(() => {\n//         axios\n//           .get(\n//             `https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`\n//           )\n//           .then((res) => {\n//             if (res.data.result) {\n//               console.log(`[Result] ${JSON.stringify(res.data.result)}`);\n//               clearInterval(timerId);\n//             }\n//           });\n//       }, 1000);\n//     });\n// };\n"]},"metadata":{},"sourceType":"module"}