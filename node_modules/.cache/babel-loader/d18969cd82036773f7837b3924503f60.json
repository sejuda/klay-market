{"ast":null,"code":"/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst utils = require('../../../caver-utils');\n\nconst {\n  ACCOUNT_KEY_TAG\n} = require('./accountKeyHelper');\n/**\n * Representing an AccountKeyLegacy.\n * @class\n */\n\n\nclass AccountKeyLegacy {\n  /**\n   * Decodes an RLP-encoded AccountKeyLegacy string.\n   * @param {string} rlpEncodedKey - An RLP-encoded AccountKeyLegacy string.\n   * @return {AccountKeyLegacy}\n   */\n  static decode(rlpEncodedKey) {\n    rlpEncodedKey = utils.addHexPrefix(rlpEncodedKey);\n    if (!rlpEncodedKey.startsWith(ACCOUNT_KEY_TAG.ACCOUNT_KEY_LEGACY_TAG)) throw new Error(`Cannot decode to AccountKeyLegacy. The prefix must be ${ACCOUNT_KEY_TAG.ACCOUNT_KEY_LEGACY_TAG}: ${rlpEncodedKey}`);\n    return new AccountKeyLegacy();\n  }\n  /**\n   * Returns an RLP-encoded AccountKeyLegacy string.\n   * @return {string}\n   */\n  // eslint-disable-next-line class-methods-use-this\n\n\n  getRLPEncoding() {\n    return ACCOUNT_KEY_TAG.ACCOUNT_KEY_LEGACY_TAG;\n  }\n\n}\n\nmodule.exports = AccountKeyLegacy;","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-account/src/accountKey/accountKeyLegacy.js"],"names":["utils","require","ACCOUNT_KEY_TAG","AccountKeyLegacy","decode","rlpEncodedKey","addHexPrefix","startsWith","ACCOUNT_KEY_LEGACY_TAG","Error","getRLPEncoding","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,oBAAD,CAAnC;AAEA;AACA;AACA;AACA;;;AACA,MAAME,gBAAN,CAAuB;AACnB;AACJ;AACA;AACA;AACA;AACiB,SAANC,MAAM,CAACC,aAAD,EAAgB;AACzBA,IAAAA,aAAa,GAAGL,KAAK,CAACM,YAAN,CAAmBD,aAAnB,CAAhB;AACA,QAAI,CAACA,aAAa,CAACE,UAAd,CAAyBL,eAAe,CAACM,sBAAzC,CAAL,EACI,MAAM,IAAIC,KAAJ,CACD,yDAAwDP,eAAe,CAACM,sBAAuB,KAAIH,aAAc,EADhH,CAAN;AAIJ,WAAO,IAAIF,gBAAJ,EAAP;AACH;AAED;AACJ;AACA;AACA;AACI;;;AACAO,EAAAA,cAAc,GAAG;AACb,WAAOR,eAAe,CAACM,sBAAvB;AACH;;AAvBkB;;AA0BvBG,MAAM,CAACC,OAAP,GAAiBT,gBAAjB","sourcesContent":["/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst utils = require('../../../caver-utils')\nconst { ACCOUNT_KEY_TAG } = require('./accountKeyHelper')\n\n/**\n * Representing an AccountKeyLegacy.\n * @class\n */\nclass AccountKeyLegacy {\n    /**\n     * Decodes an RLP-encoded AccountKeyLegacy string.\n     * @param {string} rlpEncodedKey - An RLP-encoded AccountKeyLegacy string.\n     * @return {AccountKeyLegacy}\n     */\n    static decode(rlpEncodedKey) {\n        rlpEncodedKey = utils.addHexPrefix(rlpEncodedKey)\n        if (!rlpEncodedKey.startsWith(ACCOUNT_KEY_TAG.ACCOUNT_KEY_LEGACY_TAG))\n            throw new Error(\n                `Cannot decode to AccountKeyLegacy. The prefix must be ${ACCOUNT_KEY_TAG.ACCOUNT_KEY_LEGACY_TAG}: ${rlpEncodedKey}`\n            )\n\n        return new AccountKeyLegacy()\n    }\n\n    /**\n     * Returns an RLP-encoded AccountKeyLegacy string.\n     * @return {string}\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getRLPEncoding() {\n        return ACCOUNT_KEY_TAG.ACCOUNT_KEY_LEGACY_TAG\n    }\n}\n\nmodule.exports = AccountKeyLegacy\n"]},"metadata":{},"sourceType":"script"}