{"ast":null,"code":"'use strict';\n\nconst {\n  objectToQuery\n} = require('../lib/querystring');\n\nconst configure = require('../lib/configure');\n\nconst {\n  ok\n} = require('../lib/fetch');\n\nmodule.exports = configure(({\n  fetch,\n  apiUrl,\n  apiPath,\n  headers\n}) => {\n  return async (peerId, options) => {\n    if (!options && typeof peerId === 'object') {\n      options = peerId;\n      peerId = null;\n    }\n\n    options = options || {};\n    const qs = objectToQuery({\n      peer: peerId,\n      ...(options.qs || {})\n    });\n    const url = `${apiUrl}${apiPath}/bitswap/wantlist${qs}`;\n    const res = await ok(fetch(url, {\n      signal: options.signal,\n      headers: options.headers || headers\n    }));\n    const data = await res.json();\n    return (data.Keys || []).map(item => item['/']);\n  };\n});","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/ipfs-http-client-lite/src/bitswap/wantlist.js"],"names":["objectToQuery","require","configure","ok","module","exports","fetch","apiUrl","apiPath","headers","peerId","options","qs","peer","url","res","signal","data","json","Keys","map","item"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAoBC,OAAO,CAAC,oBAAD,CAAjC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAASF,OAAO,CAAC,cAAD,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAAC,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAD,KAAyC;AAClE,SAAO,OAAOC,MAAP,EAAeC,OAAf,KAA2B;AAChC,QAAI,CAACA,OAAD,IAAY,OAAOD,MAAP,KAAkB,QAAlC,EAA4C;AAC1CC,MAAAA,OAAO,GAAGD,MAAV;AACAA,MAAAA,MAAM,GAAG,IAAT;AACD;;AAEDC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMC,EAAE,GAAGZ,aAAa,CAAC;AACvBa,MAAAA,IAAI,EAAEH,MADiB;AAEvB,UAAIC,OAAO,CAACC,EAAR,IAAc,EAAlB;AAFuB,KAAD,CAAxB;AAKA,UAAME,GAAG,GAAI,GAAEP,MAAO,GAAEC,OAAQ,oBAAmBI,EAAG,EAAtD;AACA,UAAMG,GAAG,GAAG,MAAMZ,EAAE,CAACG,KAAK,CAACQ,GAAD,EAAM;AAC9BE,MAAAA,MAAM,EAAEL,OAAO,CAACK,MADc;AAE9BP,MAAAA,OAAO,EAAEE,OAAO,CAACF,OAAR,IAAmBA;AAFE,KAAN,CAAN,CAApB;AAIA,UAAMQ,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAO,CAACD,IAAI,CAACE,IAAL,IAAa,EAAd,EAAkBC,GAAlB,CAAsBC,IAAI,IAAIA,IAAI,CAAC,GAAD,CAAlC,CAAP;AACD,GApBD;AAqBD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst { objectToQuery } = require('../lib/querystring')\nconst configure = require('../lib/configure')\nconst { ok } = require('../lib/fetch')\n\nmodule.exports = configure(({ fetch, apiUrl, apiPath, headers }) => {\n  return async (peerId, options) => {\n    if (!options && typeof peerId === 'object') {\n      options = peerId\n      peerId = null\n    }\n\n    options = options || {}\n\n    const qs = objectToQuery({\n      peer: peerId,\n      ...(options.qs || {})\n    })\n\n    const url = `${apiUrl}${apiPath}/bitswap/wantlist${qs}`\n    const res = await ok(fetch(url, {\n      signal: options.signal,\n      headers: options.headers || headers\n    }))\n    const data = await res.json()\n    return (data.Keys || []).map(item => item['/'])\n  }\n})\n"]},"metadata":{},"sourceType":"script"}