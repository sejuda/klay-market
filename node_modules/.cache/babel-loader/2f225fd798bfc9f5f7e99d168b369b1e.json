{"ast":null,"code":"/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-core-subscriptions/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nconst Subscription = require('./subscription.js');\n\nfunction Subscriptions(options) {\n  this.name = options.name;\n  this.type = options.type;\n  this.subscriptions = options.subscriptions || {};\n  this.requestManager = null;\n}\n\nSubscriptions.prototype.setRequestManager = function (requestManager) {\n  this.requestManager = requestManager;\n};\n\nSubscriptions.prototype.attachToObject = function (obj) {\n  const func = this.buildCall();\n  const name = this.name.split('.');\n\n  if (name.length > 1) {\n    obj[name[0]] = obj[name[0]] || {};\n    obj[name[0]][name[1]] = func;\n  } else {\n    obj[name[0]] = func;\n  }\n};\n\nSubscriptions.prototype.buildCall = function () {\n  const _this = this;\n\n  return function () {\n    if (!_this.subscriptions[arguments[0]]) {\n      console.warn(`Subscription ${JSON.stringify(arguments[0])} doesn't exist. Subscribing anyway.`);\n    }\n\n    const subscription = new Subscription({\n      subscription: _this.subscriptions[arguments[0]],\n      requestManager: _this.requestManager,\n      type: _this.type\n    });\n    return subscription.subscribe.apply(subscription, arguments);\n  };\n};\n\nmodule.exports = {\n  subscriptions: Subscriptions,\n  subscription: Subscription\n};","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-core-subscriptions/src/index.js"],"names":["Subscription","require","Subscriptions","options","name","type","subscriptions","requestManager","prototype","setRequestManager","attachToObject","obj","func","buildCall","split","length","_this","arguments","console","warn","JSON","stringify","subscription","subscribe","apply","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,mBAAD,CAA5B;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAC5B,OAAKC,IAAL,GAAYD,OAAO,CAACC,IAApB;AACA,OAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB;AACA,OAAKC,aAAL,GAAqBH,OAAO,CAACG,aAAR,IAAyB,EAA9C;AACA,OAAKC,cAAL,GAAsB,IAAtB;AACH;;AAEDL,aAAa,CAACM,SAAd,CAAwBC,iBAAxB,GAA4C,UAASF,cAAT,EAAyB;AACjE,OAAKA,cAAL,GAAsBA,cAAtB;AACH,CAFD;;AAIAL,aAAa,CAACM,SAAd,CAAwBE,cAAxB,GAAyC,UAASC,GAAT,EAAc;AACnD,QAAMC,IAAI,GAAG,KAAKC,SAAL,EAAb;AACA,QAAMT,IAAI,GAAG,KAAKA,IAAL,CAAUU,KAAV,CAAgB,GAAhB,CAAb;;AACA,MAAIV,IAAI,CAACW,MAAL,GAAc,CAAlB,EAAqB;AACjBJ,IAAAA,GAAG,CAACP,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeO,GAAG,CAACP,IAAI,CAAC,CAAD,CAAL,CAAH,IAAgB,EAA/B;AACAO,IAAAA,GAAG,CAACP,IAAI,CAAC,CAAD,CAAL,CAAH,CAAaA,IAAI,CAAC,CAAD,CAAjB,IAAwBQ,IAAxB;AACH,GAHD,MAGO;AACHD,IAAAA,GAAG,CAACP,IAAI,CAAC,CAAD,CAAL,CAAH,GAAeQ,IAAf;AACH;AACJ,CATD;;AAWAV,aAAa,CAACM,SAAd,CAAwBK,SAAxB,GAAoC,YAAW;AAC3C,QAAMG,KAAK,GAAG,IAAd;;AAEA,SAAO,YAAW;AACd,QAAI,CAACA,KAAK,CAACV,aAAN,CAAoBW,SAAS,CAAC,CAAD,CAA7B,CAAL,EAAwC;AACpCC,MAAAA,OAAO,CAACC,IAAR,CAAc,gBAAeC,IAAI,CAACC,SAAL,CAAeJ,SAAS,CAAC,CAAD,CAAxB,CAA6B,qCAA1D;AACH;;AAED,UAAMK,YAAY,GAAG,IAAItB,YAAJ,CAAiB;AAClCsB,MAAAA,YAAY,EAAEN,KAAK,CAACV,aAAN,CAAoBW,SAAS,CAAC,CAAD,CAA7B,CADoB;AAElCV,MAAAA,cAAc,EAAES,KAAK,CAACT,cAFY;AAGlCF,MAAAA,IAAI,EAAEW,KAAK,CAACX;AAHsB,KAAjB,CAArB;AAMA,WAAOiB,YAAY,CAACC,SAAb,CAAuBC,KAAvB,CAA6BF,YAA7B,EAA2CL,SAA3C,CAAP;AACH,GAZD;AAaH,CAhBD;;AAkBAQ,MAAM,CAACC,OAAP,GAAiB;AACbpB,EAAAA,aAAa,EAAEJ,aADF;AAEboB,EAAAA,YAAY,EAAEtB;AAFD,CAAjB","sourcesContent":["/*\n    Modifications copyright 2018 The caver-js Authors\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n\n    This file is derived from web3.js/packages/web3-core-subscriptions/src/index.js (2019/06/12).\n    Modified and improved for the caver-js development.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\nconst Subscription = require('./subscription.js')\n\nfunction Subscriptions(options) {\n    this.name = options.name\n    this.type = options.type\n    this.subscriptions = options.subscriptions || {}\n    this.requestManager = null\n}\n\nSubscriptions.prototype.setRequestManager = function(requestManager) {\n    this.requestManager = requestManager\n}\n\nSubscriptions.prototype.attachToObject = function(obj) {\n    const func = this.buildCall()\n    const name = this.name.split('.')\n    if (name.length > 1) {\n        obj[name[0]] = obj[name[0]] || {}\n        obj[name[0]][name[1]] = func\n    } else {\n        obj[name[0]] = func\n    }\n}\n\nSubscriptions.prototype.buildCall = function() {\n    const _this = this\n\n    return function() {\n        if (!_this.subscriptions[arguments[0]]) {\n            console.warn(`Subscription ${JSON.stringify(arguments[0])} doesn't exist. Subscribing anyway.`)\n        }\n\n        const subscription = new Subscription({\n            subscription: _this.subscriptions[arguments[0]],\n            requestManager: _this.requestManager,\n            type: _this.type,\n        })\n\n        return subscription.subscribe.apply(subscription, arguments)\n    }\n}\n\nmodule.exports = {\n    subscriptions: Subscriptions,\n    subscription: Subscription,\n}\n"]},"metadata":{},"sourceType":"script"}