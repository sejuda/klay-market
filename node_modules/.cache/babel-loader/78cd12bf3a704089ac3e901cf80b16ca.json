{"ast":null,"code":"'use strict';\n/* eslint-env browser */\n// Set default configuration and call create function with them\n\nmodule.exports = create => config => {\n  config = config || {};\n  if (typeof config === 'string') config = {\n    apiUrl: config\n  };\n  config.fetch = config.fetch || require('./fetch').fetch;\n  config.apiUrl = config.apiUrl || getDefaultApiUrl();\n  config.apiPath = config.apiPath || '/api/v0';\n  config.headers = new Headers(config.headers);\n  return create(config);\n};\n\nfunction getDefaultApiUrl() {\n  const proto = location.protocol.startsWith('http') ? location.protocol.split(':')[0] : 'http';\n  const host = location.hostname;\n  const port = location.port || (proto.startsWith('https') ? 443 : 80);\n  return `${proto}://${host}:${port}`;\n}","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/ipfs-http-client-lite/src/lib/configure.browser.js"],"names":["module","exports","create","config","apiUrl","fetch","require","getDefaultApiUrl","apiPath","headers","Headers","proto","location","protocol","startsWith","split","host","hostname","port"],"mappings":"AAAA;AACA;AAEA;;AACAA,MAAM,CAACC,OAAP,GAAiBC,MAAM,IAAIC,MAAM,IAAI;AACnCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACA,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgCA,MAAM,GAAG;AAAEC,IAAAA,MAAM,EAAED;AAAV,GAAT;AAEhCA,EAAAA,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAP,IAAgBC,OAAO,CAAC,SAAD,CAAP,CAAmBD,KAAlD;AACAF,EAAAA,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,IAAiBG,gBAAgB,EAAjD;AACAJ,EAAAA,MAAM,CAACK,OAAP,GAAiBL,MAAM,CAACK,OAAP,IAAkB,SAAnC;AACAL,EAAAA,MAAM,CAACM,OAAP,GAAiB,IAAIC,OAAJ,CAAYP,MAAM,CAACM,OAAnB,CAAjB;AAEA,SAAOP,MAAM,CAACC,MAAD,CAAb;AACD,CAVD;;AAYA,SAASI,gBAAT,GAA6B;AAC3B,QAAMI,KAAK,GAAGC,QAAQ,CAACC,QAAT,CAAkBC,UAAlB,CAA6B,MAA7B,IACVF,QAAQ,CAACC,QAAT,CAAkBE,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CADU,GAEV,MAFJ;AAGA,QAAMC,IAAI,GAAGJ,QAAQ,CAACK,QAAtB;AACA,QAAMC,IAAI,GAAGN,QAAQ,CAACM,IAAT,KAAkBP,KAAK,CAACG,UAAN,CAAiB,OAAjB,IAA4B,GAA5B,GAAkC,EAApD,CAAb;AACA,SAAQ,GAAEH,KAAM,MAAKK,IAAK,IAAGE,IAAK,EAAlC;AACD","sourcesContent":["'use strict'\n/* eslint-env browser */\n\n// Set default configuration and call create function with them\nmodule.exports = create => config => {\n  config = config || {}\n  if (typeof config === 'string') config = { apiUrl: config }\n\n  config.fetch = config.fetch || require('./fetch').fetch\n  config.apiUrl = config.apiUrl || getDefaultApiUrl()\n  config.apiPath = config.apiPath || '/api/v0'\n  config.headers = new Headers(config.headers)\n\n  return create(config)\n}\n\nfunction getDefaultApiUrl () {\n  const proto = location.protocol.startsWith('http')\n    ? location.protocol.split(':')[0]\n    : 'http'\n  const host = location.hostname\n  const port = location.port || (proto.startsWith('https') ? 443 : 80)\n  return `${proto}://${host}:${port}`\n}\n"]},"metadata":{},"sourceType":"script"}