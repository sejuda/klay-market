{"ast":null,"code":"/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst Bytes = require('eth-lib/lib/bytes');\n\nconst utils = require('../../../caver-utils');\n/**\n * Representing a WeightedPublicKey.\n * @class\n */\n\n\nclass WeightedPublicKey {\n  /**\n   * Create an instance of WeightedPublicKey.\n   * @param {number} weight - The weight of the key.\n   * @param {string} publicKey - The public key string.\n   */\n  constructor(weight, publicKey) {\n    this.weight = weight;\n    this.publicKey = publicKey;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  get weight() {\n    return this._weight;\n  }\n\n  set weight(w) {\n    this._weight = utils.hexToNumber(w);\n  }\n  /**\n   * @type {string}\n   */\n\n\n  get publicKey() {\n    return this._publicKey;\n  }\n\n  set publicKey(p) {\n    if (!utils.isValidPublicKey(p)) throw new Error(`Invalid public key: ${p}`);\n    this._publicKey = utils.addHexPrefix(p);\n  }\n  /**\n   * Returns an encoded weighted public key string.\n   * @return {string}\n   */\n\n\n  encodeToBytes() {\n    if (this.weight === undefined) throw new Error('weight should be specified for a multisig account');\n    if (this.publicKey === undefined) throw new Error('publicKey should be specified for a multisig account');\n    const compressedPublicKey = utils.compressPublicKey(this.publicKey);\n    return [Bytes.fromNat(utils.numberToHex(this.weight)), compressedPublicKey];\n  }\n\n}\n\nmodule.exports = WeightedPublicKey;","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-account/src/accountKey/weightedPublicKey.js"],"names":["Bytes","require","utils","WeightedPublicKey","constructor","weight","publicKey","_weight","w","hexToNumber","_publicKey","p","isValidPublicKey","Error","addHexPrefix","encodeToBytes","undefined","compressedPublicKey","compressPublicKey","fromNat","numberToHex","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,mBAAD,CAArB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CAArB;AAEA;AACA;AACA;AACA;;;AACA,MAAME,iBAAN,CAAwB;AACpB;AACJ;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACC,MAAD,EAASC,SAAT,EAAoB;AAC3B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;AAED;AACJ;AACA;;;AACc,MAAND,MAAM,GAAG;AACT,WAAO,KAAKE,OAAZ;AACH;;AAES,MAANF,MAAM,CAACG,CAAD,EAAI;AACV,SAAKD,OAAL,GAAeL,KAAK,CAACO,WAAN,CAAkBD,CAAlB,CAAf;AACH;AAED;AACJ;AACA;;;AACiB,MAATF,SAAS,GAAG;AACZ,WAAO,KAAKI,UAAZ;AACH;;AAEY,MAATJ,SAAS,CAACK,CAAD,EAAI;AACb,QAAI,CAACT,KAAK,CAACU,gBAAN,CAAuBD,CAAvB,CAAL,EAAgC,MAAM,IAAIE,KAAJ,CAAW,uBAAsBF,CAAE,EAAnC,CAAN;AAChC,SAAKD,UAAL,GAAkBR,KAAK,CAACY,YAAN,CAAmBH,CAAnB,CAAlB;AACH;AAED;AACJ;AACA;AACA;;;AACII,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKV,MAAL,KAAgBW,SAApB,EAA+B,MAAM,IAAIH,KAAJ,CAAU,mDAAV,CAAN;AAC/B,QAAI,KAAKP,SAAL,KAAmBU,SAAvB,EAAkC,MAAM,IAAIH,KAAJ,CAAU,sDAAV,CAAN;AAElC,UAAMI,mBAAmB,GAAGf,KAAK,CAACgB,iBAAN,CAAwB,KAAKZ,SAA7B,CAA5B;AACA,WAAO,CAACN,KAAK,CAACmB,OAAN,CAAcjB,KAAK,CAACkB,WAAN,CAAkB,KAAKf,MAAvB,CAAd,CAAD,EAAgDY,mBAAhD,CAAP;AACH;;AA5CmB;;AA+CxBI,MAAM,CAACC,OAAP,GAAiBnB,iBAAjB","sourcesContent":["/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst Bytes = require('eth-lib/lib/bytes')\nconst utils = require('../../../caver-utils')\n\n/**\n * Representing a WeightedPublicKey.\n * @class\n */\nclass WeightedPublicKey {\n    /**\n     * Create an instance of WeightedPublicKey.\n     * @param {number} weight - The weight of the key.\n     * @param {string} publicKey - The public key string.\n     */\n    constructor(weight, publicKey) {\n        this.weight = weight\n        this.publicKey = publicKey\n    }\n\n    /**\n     * @type {number}\n     */\n    get weight() {\n        return this._weight\n    }\n\n    set weight(w) {\n        this._weight = utils.hexToNumber(w)\n    }\n\n    /**\n     * @type {string}\n     */\n    get publicKey() {\n        return this._publicKey\n    }\n\n    set publicKey(p) {\n        if (!utils.isValidPublicKey(p)) throw new Error(`Invalid public key: ${p}`)\n        this._publicKey = utils.addHexPrefix(p)\n    }\n\n    /**\n     * Returns an encoded weighted public key string.\n     * @return {string}\n     */\n    encodeToBytes() {\n        if (this.weight === undefined) throw new Error('weight should be specified for a multisig account')\n        if (this.publicKey === undefined) throw new Error('publicKey should be specified for a multisig account')\n\n        const compressedPublicKey = utils.compressPublicKey(this.publicKey)\n        return [Bytes.fromNat(utils.numberToHex(this.weight)), compressedPublicKey]\n    }\n}\n\nmodule.exports = WeightedPublicKey\n"]},"metadata":{},"sourceType":"script"}