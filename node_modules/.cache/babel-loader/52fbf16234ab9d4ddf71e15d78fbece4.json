{"ast":null,"code":"/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst _ = require('lodash');\n\nconst Method = require('../../caver-core-method');\n\nconst formatters = require('../../caver-core-helpers').formatters;\n\nconst payloadTransformer = require('../../caver-core-helpers').payloadTransformer; // For indexing\n\n\nconst rpcCallToMethodAsObject = {}; // Wrap rpc json through 'Method'\n\nconst rpcCallToMethod = require('../../../rpc.json').map(rpcCall => {\n  rpcCall.inputFormatter = rpcCall.inputFormatter && _.map(rpcCall.inputFormatter, formatterStr => formatters[formatterStr]);\n  rpcCall.outputFormatter = formatters[rpcCall.outputFormatter];\n  rpcCall.transformPayload = payloadTransformer[rpcCall.transformPayload];\n  const [callLabel, callName] = rpcCall.call.split('_');\n\n  if (callName) {\n    if (!rpcCallToMethodAsObject[callLabel]) {\n      rpcCallToMethodAsObject[callLabel] = {};\n    }\n\n    rpcCallToMethodAsObject[callLabel][rpcCall.name] = new Method(rpcCall);\n  }\n\n  if (!rpcCallToMethodAsObject[rpcCall.name]) {\n    return rpcCallToMethodAsObject[rpcCall.name] = new Method(rpcCall);\n  }\n}).filter(a => !!a);\n\nmodule.exports = rpcCallToMethod;\nmodule.exports.rpc = rpcCallToMethodAsObject;","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-rtm/src/index.js"],"names":["_","require","Method","formatters","payloadTransformer","rpcCallToMethodAsObject","rpcCallToMethod","map","rpcCall","inputFormatter","formatterStr","outputFormatter","transformPayload","callLabel","callName","call","split","name","filter","a","module","exports","rpc"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,yBAAD,CAAtB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,0BAAD,CAAP,CAAoCE,UAAvD;;AACA,MAAMC,kBAAkB,GAAGH,OAAO,CAAC,0BAAD,CAAP,CAAoCG,kBAA/D,C,CAEA;;;AACA,MAAMC,uBAAuB,GAAG,EAAhC,C,CAEA;;AACA,MAAMC,eAAe,GAAGL,OAAO,CAAC,mBAAD,CAAP,CACnBM,GADmB,CACfC,OAAO,IAAI;AACZA,EAAAA,OAAO,CAACC,cAAR,GAAyBD,OAAO,CAACC,cAAR,IAA0BT,CAAC,CAACO,GAAF,CAAMC,OAAO,CAACC,cAAd,EAA8BC,YAAY,IAAIP,UAAU,CAACO,YAAD,CAAxD,CAAnD;AACAF,EAAAA,OAAO,CAACG,eAAR,GAA0BR,UAAU,CAACK,OAAO,CAACG,eAAT,CAApC;AACAH,EAAAA,OAAO,CAACI,gBAAR,GAA2BR,kBAAkB,CAACI,OAAO,CAACI,gBAAT,CAA7C;AAEA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBN,OAAO,CAACO,IAAR,CAAaC,KAAb,CAAmB,GAAnB,CAA9B;;AAEA,MAAIF,QAAJ,EAAc;AACV,QAAI,CAACT,uBAAuB,CAACQ,SAAD,CAA5B,EAAyC;AACrCR,MAAAA,uBAAuB,CAACQ,SAAD,CAAvB,GAAqC,EAArC;AACH;;AACDR,IAAAA,uBAAuB,CAACQ,SAAD,CAAvB,CAAmCL,OAAO,CAACS,IAA3C,IAAmD,IAAIf,MAAJ,CAAWM,OAAX,CAAnD;AACH;;AAED,MAAI,CAACH,uBAAuB,CAACG,OAAO,CAACS,IAAT,CAA5B,EAA4C;AACxC,WAAQZ,uBAAuB,CAACG,OAAO,CAACS,IAAT,CAAvB,GAAwC,IAAIf,MAAJ,CAAWM,OAAX,CAAhD;AACH;AACJ,CAlBmB,EAmBnBU,MAnBmB,CAmBZC,CAAC,IAAI,CAAC,CAACA,CAnBK,CAAxB;;AAqBAC,MAAM,CAACC,OAAP,GAAiBf,eAAjB;AACAc,MAAM,CAACC,OAAP,CAAeC,GAAf,GAAqBjB,uBAArB","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst _ = require('lodash')\nconst Method = require('../../caver-core-method')\nconst formatters = require('../../caver-core-helpers').formatters\nconst payloadTransformer = require('../../caver-core-helpers').payloadTransformer\n\n// For indexing\nconst rpcCallToMethodAsObject = {}\n\n// Wrap rpc json through 'Method'\nconst rpcCallToMethod = require('../../../rpc.json')\n    .map(rpcCall => {\n        rpcCall.inputFormatter = rpcCall.inputFormatter && _.map(rpcCall.inputFormatter, formatterStr => formatters[formatterStr])\n        rpcCall.outputFormatter = formatters[rpcCall.outputFormatter]\n        rpcCall.transformPayload = payloadTransformer[rpcCall.transformPayload]\n\n        const [callLabel, callName] = rpcCall.call.split('_')\n\n        if (callName) {\n            if (!rpcCallToMethodAsObject[callLabel]) {\n                rpcCallToMethodAsObject[callLabel] = {}\n            }\n            rpcCallToMethodAsObject[callLabel][rpcCall.name] = new Method(rpcCall)\n        }\n\n        if (!rpcCallToMethodAsObject[rpcCall.name]) {\n            return (rpcCallToMethodAsObject[rpcCall.name] = new Method(rpcCall))\n        }\n    })\n    .filter(a => !!a)\n\nmodule.exports = rpcCallToMethod\nmodule.exports.rpc = rpcCallToMethodAsObject\n"]},"metadata":{},"sourceType":"script"}