{"ast":null,"code":"/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst core = require('../../caver-core');\n\nconst Method = require('../../caver-core-method');\n\nconst Net = function Net(...args) {\n  const _this = this;\n\n  core.packageInit(this, args);\n  const netMethods = [new Method({\n    name: 'getNetworkId',\n    call: 'net_networkID',\n    params: 0\n  }), new Method({\n    name: 'isListening',\n    call: 'net_listening',\n    params: 0\n  }), new Method({\n    name: 'getPeerCount',\n    call: 'net_peerCount',\n    params: 0\n  }), new Method({\n    name: 'getPeerCountByType',\n    call: 'net_peerCountByType',\n    params: 0\n  })];\n  netMethods.forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n  });\n};\n\nmodule.exports = Net;","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-rpc/src/net.js"],"names":["core","require","Method","Net","args","_this","packageInit","netMethods","name","call","params","forEach","method","attachToObject","setRequestManager","_requestManager","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,yBAAD,CAAtB;;AAEA,MAAME,GAAG,GAAG,SAASA,GAAT,CAAa,GAAGC,IAAhB,EAAsB;AAC9B,QAAMC,KAAK,GAAG,IAAd;;AAEAL,EAAAA,IAAI,CAACM,WAAL,CAAiB,IAAjB,EAAuBF,IAAvB;AAEA,QAAMG,UAAU,GAAG,CACf,IAAIL,MAAJ,CAAW;AACPM,IAAAA,IAAI,EAAE,cADC;AAEPC,IAAAA,IAAI,EAAE,eAFC;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAAX,CADe,EAMf,IAAIR,MAAJ,CAAW;AACPM,IAAAA,IAAI,EAAE,aADC;AAEPC,IAAAA,IAAI,EAAE,eAFC;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAAX,CANe,EAWf,IAAIR,MAAJ,CAAW;AACPM,IAAAA,IAAI,EAAE,cADC;AAEPC,IAAAA,IAAI,EAAE,eAFC;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAAX,CAXe,EAgBf,IAAIR,MAAJ,CAAW;AACPM,IAAAA,IAAI,EAAE,oBADC;AAEPC,IAAAA,IAAI,EAAE,qBAFC;AAGPC,IAAAA,MAAM,EAAE;AAHD,GAAX,CAhBe,CAAnB;AAuBAH,EAAAA,UAAU,CAACI,OAAX,CAAmB,UAASC,MAAT,EAAiB;AAChCA,IAAAA,MAAM,CAACC,cAAP,CAAsBR,KAAtB;AACAO,IAAAA,MAAM,CAACE,iBAAP,CAAyBT,KAAK,CAACU,eAA/B;AACH,GAHD;AAIH,CAhCD;;AAkCAC,MAAM,CAACC,OAAP,GAAiBd,GAAjB","sourcesContent":["/*\n    Copyright 2020 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst core = require('../../caver-core')\nconst Method = require('../../caver-core-method')\n\nconst Net = function Net(...args) {\n    const _this = this\n\n    core.packageInit(this, args)\n\n    const netMethods = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_networkID',\n            params: 0,\n        }),\n        new Method({\n            name: 'isListening',\n            call: 'net_listening',\n            params: 0,\n        }),\n        new Method({\n            name: 'getPeerCount',\n            call: 'net_peerCount',\n            params: 0,\n        }),\n        new Method({\n            name: 'getPeerCountByType',\n            call: 'net_peerCountByType',\n            params: 0,\n        }),\n    ]\n\n    netMethods.forEach(function(method) {\n        method.attachToObject(_this)\n        method.setRequestManager(_this._requestManager)\n    })\n}\n\nmodule.exports = Net\n"]},"metadata":{},"sourceType":"script"}