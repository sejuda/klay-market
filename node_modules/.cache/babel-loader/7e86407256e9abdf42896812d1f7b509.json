{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/klay-market/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport { getBalance, readCount, setCount } from \"./api/UseCaver\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { queryByDisplayValue } from \"@testing-library/react\"; // 2021 0616 시작\n// 1 Smart contract 배포 주소 파악 ( 가져오기 )\n// 2 caver.js 를 이용해서 스마트 컨트랙트 연결하기\n// 3 가져온 스마트 컨트랙트 실행 결과 (데이터 ) 웹에 표현하기\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction onPressButton() {\n  console.log(\"hi\");\n}\n\nfunction App() {\n  _s();\n\n  useState[(balance, setBalance)] = useState(\"0\"); //readCount();\n\n  getBalance(\"0xf8f540fd7840d0e59c31092686a09de06b5136dd\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        title: `카운트 변경`,\n        onClick: () => {\n          setCount(100);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"good src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Vqcvt5M8/R8rBk7J5Q/chACg0UM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/src/App.js"],"names":["getBalance","readCount","setCount","useState","queryByDisplayValue","onPressButton","console","log","App","balance","setBalance","logo"],"mappings":";;;;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,gBAAhD;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,wBAApC,C,CAEA;AACA;AACA;AACA;;;;AACA,SAASC,aAAT,GAAyB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD;;AACD,SAASC,GAAT,GAAe;AAAA;;AACbL,EAAAA,QAAQ,EAAEM,OAAO,EAAEC,UAAX,EAAR,GAAkCP,QAAQ,CAAC,GAAD,CAA1C,CADa,CAEb;;AACAH,EAAAA,UAAU,CAAC,4CAAD,CAAV;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEW,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAG,QADV;AAEE,QAAA,OAAO,EAAE,MAAM;AACbT,UAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AAJH;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;GA5BQM,G;;KAAAA,G;AA8BT,eAAeA,GAAf","sourcesContent":["import logo from \"./logo.svg\";\nimport { getBalance, readCount, setCount } from \"./api/UseCaver\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { queryByDisplayValue } from \"@testing-library/react\";\n\n// 2021 0616 시작\n// 1 Smart contract 배포 주소 파악 ( 가져오기 )\n// 2 caver.js 를 이용해서 스마트 컨트랙트 연결하기\n// 3 가져온 스마트 컨트랙트 실행 결과 (데이터 ) 웹에 표현하기\nfunction onPressButton() {\n  console.log(\"hi\");\n}\nfunction App() {\n  useState[(balance, setBalance)] = useState(\"0\");\n  //readCount();\n  getBalance(\"0xf8f540fd7840d0e59c31092686a09de06b5136dd\");\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <button\n          title={`카운트 변경`}\n          onClick={() => {\n            setCount(100);\n          }}\n        ></button>\n        <p>\n          Edit <code>good src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}