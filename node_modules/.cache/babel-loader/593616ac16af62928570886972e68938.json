{"ast":null,"code":"/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * Should be called to check the parameters of transaction\n *\n * @method validateParams\n * @param {Object}\n * @return {Error}\n */\nconst utils = require('../../caver-utils');\n\nconst {\n  TX_TYPE_STRING\n} = require('../../caver-transaction/src/transactionHelper/transactionHelper');\n\nfunction validateParams(tx) {\n  let error; // validate for fee payer transaction format\n\n  if (tx.senderRawTransaction) {\n    if (!tx.feePayer || tx.feePayer === '0x' || tx.feePayer === '0x0000000000000000000000000000000000000000') {\n      error = new Error(`Invalid fee payer: ${tx.feePayer}`);\n    } else if (!utils.isAddress(tx.feePayer)) {\n      error = new Error(`Invalid address of fee payer: ${tx.feePayer}`);\n    }\n\n    return error;\n  }\n\n  const isValidateType = validateTxType(tx.type);\n\n  if (!isValidateType) {\n    return new Error(`The transaction type [${tx.type}] is not supported`);\n  }\n\n  error = validateTxObjectWithType(tx);\n\n  if (error !== undefined) {\n    return error;\n  }\n\n  if (tx.type !== TX_TYPE_STRING.TxTypeLegacyTransaction && !tx.from) {\n    error = new Error('\"from\" is missing');\n  } else if (tx.from) {\n    if (tx.from === '0x' || tx.from === '0x0000000000000000000000000000000000000000') {\n      if (tx.type !== TX_TYPE_STRING.TxTypeLegacyTransaction) {\n        error = new Error(`Invalid address of from: ${tx.from}`);\n      }\n    } else if (!utils.isAddress(tx.from)) {\n      error = new Error(`Invalid address of from: ${tx.from}`);\n    }\n  }\n\n  if (tx.gas === undefined && tx.gasLimit === undefined) {\n    error = new Error('\"gas\" is missing');\n  } else if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) {\n    error = new Error('gas, gasPrice, nonce or chainId is lower than 0');\n  } // If feePayerSignatures is set in transaction object, feePayer also should be defined together.\n\n\n  if (tx.feePayerSignatures && !utils.isEmptySig(tx.feePayerSignatures)) {\n    if (!tx.feePayer || tx.feePayer === '0x' || tx.feePayer === '0x0000000000000000000000000000000000000000') {\n      error = new Error('\"feePayer\" is missing: feePayer must be defined with feePayerSignatures.');\n    } else if (!utils.isAddress(tx.feePayer)) {\n      error = new Error(`Invalid address of fee payer: ${tx.feePayer}`);\n    }\n  }\n\n  return error;\n}\n/**\n * Should be called to check the type of transaction\n * Transaction type has to be checked if type is set.\n *\n * @method validateTypes\n * @param {string}\n * @return {bool}\n */\n\n\nfunction validateTxType(txType) {\n  if (!txType) {\n    return true;\n  }\n\n  switch (txType) {\n    case 'VALUE_TRANSFER':\n    case 'FEE_DELEGATED_VALUE_TRANSFER':\n    case 'FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO':\n    case 'VALUE_TRANSFER_MEMO':\n    case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO':\n    case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO':\n    case 'ACCOUNT_UPDATE':\n    case 'FEE_DELEGATED_ACCOUNT_UPDATE':\n    case 'FEE_DELEGATED_ACCOUNT_UPDATE_WITH_RATIO':\n    case 'SMART_CONTRACT_DEPLOY':\n    case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY':\n    case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO':\n    case 'SMART_CONTRACT_EXECUTION':\n    case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION':\n    case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO':\n    case 'CANCEL':\n    case 'FEE_DELEGATED_CANCEL':\n    case 'FEE_DELEGATED_CANCEL_WITH_RATIO':\n    case 'CHAIN_DATA_ANCHORING':\n    case 'LEGACY':\n    case TX_TYPE_STRING.TxTypeValueTransfer:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\n    case TX_TYPE_STRING.TxTypeValueTransferMemo:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\n    case TX_TYPE_STRING.TxTypeAccountUpdate:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\n    case TX_TYPE_STRING.TxTypeSmartContractDeploy:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\n    case TX_TYPE_STRING.TxTypeSmartContractExecution:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\n    case TX_TYPE_STRING.TxTypeCancel:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\n    case TX_TYPE_STRING.TxTypeChainDataAnchoring:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\n    case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\n    case TX_TYPE_STRING.TxTypeLegacyTransaction:\n      return true;\n  }\n\n  return false;\n}\n/**\n * Should be called to check codeFormat\n *\n * @method validateTypes\n * @param {string}\n * @return {bool}\n */\n\n\nfunction validateCodeFormat(cf) {\n  if (cf === undefined) {\n    return true;\n  }\n\n  switch (cf) {\n    case 0:\n    case 'EVM':\n    case '0x':\n    case '0x0':\n      return true;\n  }\n\n  return false;\n}\n\nfunction validateTxObjectWithType(tx) {\n  if (tx.type === undefined) {\n    return validateLegacy(tx);\n  }\n\n  switch (tx.type) {\n    case 'LEGACY':\n    case TX_TYPE_STRING.TxTypeLegacyTransaction:\n      return validateLegacy(tx);\n\n    case 'VALUE_TRANSFER':\n    case TX_TYPE_STRING.TxTypeValueTransfer:\n      return validateValueTransfer(tx);\n\n    case 'FEE_DELEGATED_VALUE_TRANSFER':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\n      return validateFeeDelegatedValueTransfer(tx);\n\n    case 'FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\n      return validateFeeDelegatedValueTransferWithRatio(tx);\n\n    case 'VALUE_TRANSFER_MEMO':\n    case TX_TYPE_STRING.TxTypeValueTransferMemo:\n      return validateValueTransferMemo(tx);\n\n    case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\n      return validateFeeDelegatedValueTransferMemo(tx);\n\n    case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\n      return validateFeeDelegatedValueTransferMemoWithRatio(tx);\n\n    case 'ACCOUNT_UPDATE':\n    case TX_TYPE_STRING.TxTypeAccountUpdate:\n      return validateAccountUpdate(tx);\n\n    case 'FEE_DELEGATED_ACCOUNT_UPDATE':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\n      return validateFeeDelegatedAccountUpdate(tx);\n\n    case 'FEE_DELEGATED_ACCOUNT_UPDATE_WITH_RATIO':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\n      return validateFeeDelegatedAccountUpdateWithRatio(tx);\n\n    case 'SMART_CONTRACT_DEPLOY':\n    case TX_TYPE_STRING.TxTypeSmartContractDeploy:\n      return validateSmartContractDeploy(tx);\n\n    case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\n      return validateFeeDelegatedSmartContractDeploy(tx);\n\n    case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\n      return validateFeeDelegatedSmartContractDeployWithRatio(tx);\n\n    case 'SMART_CONTRACT_EXECUTION':\n    case TX_TYPE_STRING.TxTypeSmartContractExecution:\n      return validateSmartContractExecution(tx);\n\n    case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\n      return validateFeeDelegatedSmartContractExecution(tx);\n\n    case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\n      return validateFeeDelegatedSmartContractExecutionWithRatio(tx);\n\n    case 'CANCEL':\n    case TX_TYPE_STRING.TxTypeCancel:\n      return validateCancel(tx);\n\n    case 'FEE_DELEGATED_CANCEL':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\n      return validateFeeDelegatedCancel(tx);\n\n    case 'FEE_DELEGATED_CANCEL_WITH_RATIO':\n    case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\n      return validateFeeDelegatedCancelWithRatio(tx);\n\n    case 'CHAIN_DATA_ANCHORING':\n    case TX_TYPE_STRING.TxTypeChainDataAnchoring:\n      return validateChainDataAnchoring(tx);\n\n    case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\n      return validateFeeDelegatedChainDataAnchoring(tx);\n\n    case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\n      return validateFeeDelegatedChainDataAnchoringWithRatio(tx);\n  }\n\n  return undefined;\n}\n\nfunction validateLegacy(transaction) {\n  if (transaction.to === undefined && transaction.data === undefined && transaction.input === undefined) {\n    return new Error('contract creation without any data provided');\n  }\n\n  if (transaction.to && transaction.to !== '0x' && transaction.to !== '0x0000000000000000000000000000000000000000' && !utils.isAddress(transaction.to)) {\n    return new Error(`Invalid address of to: ${transaction.to}`);\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.humanReadable !== undefined) {\n    return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  const error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateNonFeeDelegated(transaction) {\n  const type = transaction.type ? transaction.type : 'LEGACY';\n\n  if (transaction.feePayer !== undefined) {\n    return new Error(`\"feePayer\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.feeRatio !== undefined) {\n    return new Error(`\"feeRatio\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.feePayerSignatures !== undefined) {\n    return new Error(`\"feePayerSignatures\" cannot be used with ${type} transaction`);\n  }\n}\n\nfunction validateFeeDelegated(transaction) {\n  if (transaction.type.includes('WITH_RATIO') || transaction.type.includes('WithRatio')) {\n    if (transaction.feeRatio === undefined) {\n      return new Error('\"feeRatio\" is missing');\n    }\n  } else if (transaction.feeRatio !== undefined) {\n    return new Error(`\"feeRatio\" cannot be used with ${transaction.type} transaction`);\n  }\n}\n\nfunction validateNotAccountTransaction(transaction) {\n  const type = transaction.type ? transaction.type : 'LEGACY';\n\n  if (transaction.account !== undefined) {\n    return new Error(`\"account\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.key !== undefined) {\n    return new Error(`\"key\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.legacyKey !== undefined) {\n    return new Error(`\"legacyKey\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.publicKey !== undefined) {\n    return new Error(`\"publicKey\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.multisig !== undefined) {\n    return new Error(`\"multisig\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.roleTransactionKey !== undefined) {\n    return new Error(`\"roleTransactionKey\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.roleAccountUpdateKey !== undefined) {\n    return new Error(`\"roleAccountUpdateKey\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.roleFeePayerKey !== undefined) {\n    return new Error(`\"roleFeePayerKey\" cannot be used with ${type} transaction`);\n  }\n\n  if (transaction.failKey !== undefined) {\n    return new Error(`\"failKey\" cannot be used with ${type} transaction`);\n  }\n}\n\nfunction checkValueTransferEssential(transaction) {\n  if (transaction.to === undefined) {\n    return new Error('\"to\" is missing');\n  }\n\n  if (!utils.isAddress(transaction.to)) {\n    return new Error(`Invalid address of to: ${transaction.to}`);\n  }\n\n  if (transaction.value === undefined) {\n    return new Error('\"value\" is missing');\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.data !== undefined) {\n    return new Error(`\"data\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.input !== undefined) {\n    return new Error(`\"input\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.humanReadable !== undefined) {\n    return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`);\n  }\n}\n\nfunction validateValueTransfer(transaction) {\n  let error = checkValueTransferEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedValueTransfer(transaction) {\n  let error = checkValueTransferEssential(transaction);\n  if (error) return error;\n  error = validateFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedValueTransferWithRatio(transaction) {\n  return validateFeeDelegatedValueTransfer(transaction);\n}\n\nfunction checkValueTransferMemoEssential(transaction) {\n  if (transaction.to === undefined) {\n    return new Error('\"to\" is missing');\n  }\n\n  if (!utils.isAddress(transaction.to)) {\n    return new Error(`Invalid address of to: ${transaction.to}`);\n  }\n\n  if (transaction.value === undefined) {\n    return new Error('\"value\" is missing');\n  }\n\n  if (transaction.input !== undefined && transaction.data !== undefined) {\n    return new Error(`\"data\" and \"input\" cannot be used as properties of transactions at the same time.`);\n  }\n\n  if (transaction.input === undefined && transaction.data === undefined) {\n    if (transaction.type.includes('TxType')) return new Error('\"input\" is missing');\n    return new Error('\"data\" is missing');\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.humanReadable !== undefined) {\n    return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`);\n  }\n}\n\nfunction validateValueTransferMemo(transaction) {\n  let error = checkValueTransferMemoEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedValueTransferMemo(transaction) {\n  let error = checkValueTransferMemoEssential(transaction);\n  if (error) return error;\n  error = validateFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedValueTransferMemoWithRatio(transaction) {\n  return validateFeeDelegatedValueTransferMemo(transaction);\n}\n\nfunction validateAccountTransaction(transaction) {\n  if (transaction.data !== undefined) {\n    return new Error(`\"data\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.input !== undefined) {\n    return new Error(`\"input\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.humanReadable !== undefined) {\n    return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`);\n  } // TxTypeAccountUpdate, TxTypeFeeDelegatedAccountUpdate and TxTypeFeeDelegatedAccountUpdateWithRatio transaction use 'account' only\n\n\n  if (transaction.type.includes('TxType')) {\n    if (!transaction.account) return new Error(`Missing account information with ${transaction.type} transaction`);\n\n    if (transaction.key !== undefined) {\n      return new Error(`\"key\" cannot be used with ${transaction.type} transaction.`);\n    }\n\n    if (transaction.legacyKey !== undefined) {\n      return new Error(`\"legacyKey\" cannot be used with ${transaction.type} transaction.`);\n    }\n\n    if (transaction.publicKey) {\n      return new Error(`\"publicKey\" cannot be used with ${transaction.type} transaction.`);\n    }\n\n    if (transaction.multisig) {\n      return new Error(`\"multisig\" cannot be used with ${transaction.type} transaction.`);\n    }\n\n    if (transaction.roleTransactionKey) {\n      return new Error(`\"roleTransactionKey\" cannot be used with ${transaction.type} transaction.`);\n    }\n\n    if (transaction.roleAccountUpdateKey) {\n      return new Error(`\"roleAccountUpdateKey\" cannot be used with ${transaction.type} transaction.`);\n    }\n\n    if (transaction.roleFeePayerKey) {\n      return new Error(`\"roleFeePayerKey\" cannot be used with ${transaction.type} transaction.`);\n    }\n\n    if (transaction.failKey !== undefined) {\n      return new Error(`\"failKey\" cannot be used with ${transaction.type} transaction.`);\n    }\n\n    return;\n  }\n\n  if (transaction.account) return new Error(`\"account\" cannot be used with ${transaction.type} transaction`);\n  const duplicatedKeyInfo = `The key parameter to be used for ${transaction.type} is duplicated.`;\n\n  if (!transaction.key && transaction.legacyKey === undefined && !transaction.publicKey && !transaction.multisig && !transaction.roleTransactionKey && !transaction.roleAccountUpdateKey && !transaction.roleFeePayerKey && transaction.failKey === undefined) {\n    return new Error(`Missing key information with ${transaction.type} transaction`);\n  }\n\n  if (transaction.key) {\n    if (transaction.legacyKey !== undefined || transaction.publicKey || transaction.multisig || transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey || transaction.failKey !== undefined) {\n      return new Error(duplicatedKeyInfo);\n    }\n  } else if (transaction.legacyKey !== undefined) {\n    if (transaction.publicKey || transaction.multisig || transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey || transaction.failKey !== undefined) {\n      return new Error(duplicatedKeyInfo);\n    }\n  } else if (transaction.publicKey) {\n    if (transaction.multisig || transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey || transaction.failKey !== undefined) {\n      return new Error(duplicatedKeyInfo);\n    }\n  } else if (transaction.multisig) {\n    if (transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey || transaction.failKey !== undefined) {\n      return new Error(duplicatedKeyInfo);\n    }\n  } else if (transaction.failKey !== undefined) {\n    if (transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey) {\n      return new Error(duplicatedKeyInfo);\n    }\n  }\n}\n\nfunction checkUpdateEssential(transaction) {\n  if (transaction.to !== undefined) {\n    return new Error(`\"to\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.value !== undefined) {\n    return new Error(`\"value\" cannot be used with ${transaction.type} transaction`);\n  }\n}\n\nfunction validateAccountUpdate(transaction) {\n  let error = checkUpdateEssential(transaction);\n  if (error) return error;\n  error = validateAccountTransaction(transaction);\n  if (error) return error;\n  return validateNonFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedAccountUpdate(transaction) {\n  let error = checkUpdateEssential(transaction);\n  if (error) return error;\n  error = validateAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedAccountUpdateWithRatio(transaction) {\n  return validateFeeDelegatedAccountUpdate(transaction);\n}\n\nfunction checkDeployEssential(transaction) {\n  if (transaction.value === undefined && !transaction.type.includes('TxType')) {\n    return new Error('\"value\" is missing');\n  }\n\n  if (transaction.input !== undefined && transaction.data !== undefined && !transaction.type.includes('TxType')) {\n    return new Error(`\"data\" and \"input\" cannot be used as properties of transactions at the same time.`);\n  }\n\n  if (transaction.input === undefined && transaction.data === undefined) {\n    if (transaction.type.includes('TxType')) return new Error('\"input\" is missing');\n    return new Error('\"data\" is missing');\n  }\n\n  if (transaction.to !== undefined && transaction.to !== '0x') {\n    return new Error(`\"to\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.codeFormat !== undefined && !validateCodeFormat(transaction.codeFormat)) {\n    return new Error(`The codeFormat(${transaction.codeFormat}) is invalid.`);\n  }\n\n  if (transaction.humanReadable !== undefined && transaction.humanReadable === true) {\n    return new Error('HumanReadableAddress is not supported yet.');\n  }\n}\n\nfunction validateSmartContractDeploy(transaction) {\n  let error = checkDeployEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedSmartContractDeploy(transaction) {\n  let error = checkDeployEssential(transaction);\n  if (error) return error;\n  error = validateNotAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedSmartContractDeployWithRatio(transaction) {\n  return validateFeeDelegatedSmartContractDeploy(transaction);\n}\n\nfunction checkExecutionEssential(transaction) {\n  if (transaction.to === undefined) {\n    return new Error('\"to\" is missing');\n  }\n\n  if (!utils.isAddress(transaction.to)) {\n    return new Error(`Invalid address of to: ${transaction.to}`);\n  }\n\n  if (transaction.input !== undefined && transaction.data !== undefined) {\n    return new Error(`\"data\" and \"input\" cannot be used as properties of transactions at the same time.`);\n  }\n\n  if (transaction.input === undefined && transaction.data === undefined) {\n    if (transaction.type.includes('TxType')) return new Error('\"input\" is missing');\n    return new Error('\"data\" is missing');\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.humanReadable !== undefined) {\n    return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`);\n  }\n}\n\nfunction validateSmartContractExecution(transaction) {\n  let error = checkExecutionEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedSmartContractExecution(transaction) {\n  let error = checkExecutionEssential(transaction);\n  if (error) return error;\n  error = validateNotAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n  return validateFeeDelegatedSmartContractExecution(transaction);\n}\n\nfunction checkCacncelEssential(transaction) {\n  if (transaction.to !== undefined) {\n    return new Error(`\"to\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.value !== undefined) {\n    return new Error(`\"value\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.data !== undefined) {\n    return new Error(`\"data\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.input !== undefined) {\n    return new Error(`\"input\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.humanReadable !== undefined) {\n    return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`);\n  }\n}\n\nfunction validateCancel(transaction) {\n  let error = checkCacncelEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedCancel(transaction) {\n  let error = checkCacncelEssential(transaction);\n  if (error) return error;\n  error = validateNotAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedCancelWithRatio(transaction) {\n  return validateFeeDelegatedCancel(transaction);\n}\n\nfunction checkChainDataAnchoringEssential(transaction) {\n  if (transaction.input !== undefined && transaction.data !== undefined) {\n    return new Error(`\"data\" and \"input\" cannot be used as properties of transactions at the same time.`);\n  }\n\n  if (transaction.input === undefined && transaction.data === undefined) {\n    if (transaction.anchoredData !== undefined) {\n      transaction.data = transaction.anchoredData;\n      delete transaction.anchoredData;\n    } else {\n      if (transaction.type.includes('TxType')) return new Error('\"input\" is missing');\n      return new Error('\"data\" is missing');\n    }\n  }\n\n  if (transaction.value !== undefined) {\n    return new Error(`\"value\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.to !== undefined) {\n    return new Error(`\"to\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.codeFormat !== undefined) {\n    return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`);\n  }\n\n  if (transaction.humanReadable !== undefined) {\n    return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`);\n  }\n}\n\nfunction validateChainDataAnchoring(transaction) {\n  let error = checkChainDataAnchoringEssential(transaction);\n  if (error) return error;\n  error = validateNonFeeDelegated(transaction);\n  if (error) return error;\n  return validateNotAccountTransaction(transaction);\n}\n\nfunction validateFeeDelegatedChainDataAnchoring(transaction) {\n  let error = checkChainDataAnchoringEssential(transaction);\n  if (error) return error;\n  error = validateNotAccountTransaction(transaction);\n  if (error) return error;\n  return validateFeeDelegated(transaction);\n}\n\nfunction validateFeeDelegatedChainDataAnchoringWithRatio(transaction) {\n  return validateFeeDelegatedChainDataAnchoring(transaction);\n}\n\nmodule.exports = {\n  validateParams,\n  validateTxType,\n  validateCodeFormat\n};","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-core-helpers/src/validateFunction.js"],"names":["utils","require","TX_TYPE_STRING","validateParams","tx","error","senderRawTransaction","feePayer","Error","isAddress","isValidateType","validateTxType","type","validateTxObjectWithType","undefined","TxTypeLegacyTransaction","from","gas","gasLimit","nonce","gasPrice","chainId","feePayerSignatures","isEmptySig","txType","TxTypeValueTransfer","TxTypeFeeDelegatedValueTransfer","TxTypeFeeDelegatedValueTransferWithRatio","TxTypeValueTransferMemo","TxTypeFeeDelegatedValueTransferMemo","TxTypeFeeDelegatedValueTransferMemoWithRatio","TxTypeAccountUpdate","TxTypeFeeDelegatedAccountUpdate","TxTypeFeeDelegatedAccountUpdateWithRatio","TxTypeSmartContractDeploy","TxTypeFeeDelegatedSmartContractDeploy","TxTypeFeeDelegatedSmartContractDeployWithRatio","TxTypeSmartContractExecution","TxTypeFeeDelegatedSmartContractExecution","TxTypeFeeDelegatedSmartContractExecutionWithRatio","TxTypeCancel","TxTypeFeeDelegatedCancel","TxTypeFeeDelegatedCancelWithRatio","TxTypeChainDataAnchoring","TxTypeFeeDelegatedChainDataAnchoring","TxTypeFeeDelegatedChainDataAnchoringWithRatio","validateCodeFormat","cf","validateLegacy","validateValueTransfer","validateFeeDelegatedValueTransfer","validateFeeDelegatedValueTransferWithRatio","validateValueTransferMemo","validateFeeDelegatedValueTransferMemo","validateFeeDelegatedValueTransferMemoWithRatio","validateAccountUpdate","validateFeeDelegatedAccountUpdate","validateFeeDelegatedAccountUpdateWithRatio","validateSmartContractDeploy","validateFeeDelegatedSmartContractDeploy","validateFeeDelegatedSmartContractDeployWithRatio","validateSmartContractExecution","validateFeeDelegatedSmartContractExecution","validateFeeDelegatedSmartContractExecutionWithRatio","validateCancel","validateFeeDelegatedCancel","validateFeeDelegatedCancelWithRatio","validateChainDataAnchoring","validateFeeDelegatedChainDataAnchoring","validateFeeDelegatedChainDataAnchoringWithRatio","transaction","to","data","input","codeFormat","humanReadable","validateNonFeeDelegated","validateNotAccountTransaction","feeRatio","validateFeeDelegated","includes","account","key","legacyKey","publicKey","multisig","roleTransactionKey","roleAccountUpdateKey","roleFeePayerKey","failKey","checkValueTransferEssential","value","checkValueTransferMemoEssential","validateAccountTransaction","duplicatedKeyInfo","checkUpdateEssential","checkDeployEssential","checkExecutionEssential","checkCacncelEssential","checkChainDataAnchoringEssential","anchoredData","module","exports"],"mappings":"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","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * Should be called to check the parameters of transaction\n *\n * @method validateParams\n * @param {Object}\n * @return {Error}\n */\n\nconst utils = require('../../caver-utils')\nconst { TX_TYPE_STRING } = require('../../caver-transaction/src/transactionHelper/transactionHelper')\n\nfunction validateParams(tx) {\n    let error\n\n    // validate for fee payer transaction format\n    if (tx.senderRawTransaction) {\n        if (!tx.feePayer || tx.feePayer === '0x' || tx.feePayer === '0x0000000000000000000000000000000000000000') {\n            error = new Error(`Invalid fee payer: ${tx.feePayer}`)\n        } else if (!utils.isAddress(tx.feePayer)) {\n            error = new Error(`Invalid address of fee payer: ${tx.feePayer}`)\n        }\n        return error\n    }\n\n    const isValidateType = validateTxType(tx.type)\n    if (!isValidateType) {\n        return new Error(`The transaction type [${tx.type}] is not supported`)\n    }\n\n    error = validateTxObjectWithType(tx)\n    if (error !== undefined) {\n        return error\n    }\n\n    if (tx.type !== TX_TYPE_STRING.TxTypeLegacyTransaction && !tx.from) {\n        error = new Error('\"from\" is missing')\n    } else if (tx.from) {\n        if (tx.from === '0x' || tx.from === '0x0000000000000000000000000000000000000000') {\n            if (tx.type !== TX_TYPE_STRING.TxTypeLegacyTransaction) {\n                error = new Error(`Invalid address of from: ${tx.from}`)\n            }\n        } else if (!utils.isAddress(tx.from)) {\n            error = new Error(`Invalid address of from: ${tx.from}`)\n        }\n    }\n\n    if (tx.gas === undefined && tx.gasLimit === undefined) {\n        error = new Error('\"gas\" is missing')\n    } else if (tx.nonce < 0 || tx.gas < 0 || tx.gasPrice < 0 || tx.chainId < 0) {\n        error = new Error('gas, gasPrice, nonce or chainId is lower than 0')\n    }\n\n    // If feePayerSignatures is set in transaction object, feePayer also should be defined together.\n    if (tx.feePayerSignatures && !utils.isEmptySig(tx.feePayerSignatures)) {\n        if (!tx.feePayer || tx.feePayer === '0x' || tx.feePayer === '0x0000000000000000000000000000000000000000') {\n            error = new Error('\"feePayer\" is missing: feePayer must be defined with feePayerSignatures.')\n        } else if (!utils.isAddress(tx.feePayer)) {\n            error = new Error(`Invalid address of fee payer: ${tx.feePayer}`)\n        }\n    }\n\n    return error\n}\n\n/**\n * Should be called to check the type of transaction\n * Transaction type has to be checked if type is set.\n *\n * @method validateTypes\n * @param {string}\n * @return {bool}\n */\nfunction validateTxType(txType) {\n    if (!txType) {\n        return true\n    }\n    switch (txType) {\n        case 'VALUE_TRANSFER':\n        case 'FEE_DELEGATED_VALUE_TRANSFER':\n        case 'FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO':\n        case 'VALUE_TRANSFER_MEMO':\n        case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO':\n        case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO':\n        case 'ACCOUNT_UPDATE':\n        case 'FEE_DELEGATED_ACCOUNT_UPDATE':\n        case 'FEE_DELEGATED_ACCOUNT_UPDATE_WITH_RATIO':\n        case 'SMART_CONTRACT_DEPLOY':\n        case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY':\n        case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO':\n        case 'SMART_CONTRACT_EXECUTION':\n        case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION':\n        case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO':\n        case 'CANCEL':\n        case 'FEE_DELEGATED_CANCEL':\n        case 'FEE_DELEGATED_CANCEL_WITH_RATIO':\n        case 'CHAIN_DATA_ANCHORING':\n        case 'LEGACY':\n        case TX_TYPE_STRING.TxTypeValueTransfer:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\n        case TX_TYPE_STRING.TxTypeValueTransferMemo:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\n        case TX_TYPE_STRING.TxTypeAccountUpdate:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\n        case TX_TYPE_STRING.TxTypeSmartContractDeploy:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\n        case TX_TYPE_STRING.TxTypeSmartContractExecution:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\n        case TX_TYPE_STRING.TxTypeCancel:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\n        case TX_TYPE_STRING.TxTypeChainDataAnchoring:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\n        case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\n        case TX_TYPE_STRING.TxTypeLegacyTransaction:\n            return true\n    }\n    return false\n}\n\n/**\n * Should be called to check codeFormat\n *\n * @method validateTypes\n * @param {string}\n * @return {bool}\n */\nfunction validateCodeFormat(cf) {\n    if (cf === undefined) {\n        return true\n    }\n\n    switch (cf) {\n        case 0:\n        case 'EVM':\n        case '0x':\n        case '0x0':\n            return true\n    }\n    return false\n}\n\nfunction validateTxObjectWithType(tx) {\n    if (tx.type === undefined) {\n        return validateLegacy(tx)\n    }\n    switch (tx.type) {\n        case 'LEGACY':\n        case TX_TYPE_STRING.TxTypeLegacyTransaction:\n            return validateLegacy(tx)\n        case 'VALUE_TRANSFER':\n        case TX_TYPE_STRING.TxTypeValueTransfer:\n            return validateValueTransfer(tx)\n        case 'FEE_DELEGATED_VALUE_TRANSFER':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransfer:\n            return validateFeeDelegatedValueTransfer(tx)\n        case 'FEE_DELEGATED_VALUE_TRANSFER_WITH_RATIO':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferWithRatio:\n            return validateFeeDelegatedValueTransferWithRatio(tx)\n        case 'VALUE_TRANSFER_MEMO':\n        case TX_TYPE_STRING.TxTypeValueTransferMemo:\n            return validateValueTransferMemo(tx)\n        case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemo:\n            return validateFeeDelegatedValueTransferMemo(tx)\n        case 'FEE_DELEGATED_VALUE_TRANSFER_MEMO_WITH_RATIO':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedValueTransferMemoWithRatio:\n            return validateFeeDelegatedValueTransferMemoWithRatio(tx)\n        case 'ACCOUNT_UPDATE':\n        case TX_TYPE_STRING.TxTypeAccountUpdate:\n            return validateAccountUpdate(tx)\n        case 'FEE_DELEGATED_ACCOUNT_UPDATE':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdate:\n            return validateFeeDelegatedAccountUpdate(tx)\n        case 'FEE_DELEGATED_ACCOUNT_UPDATE_WITH_RATIO':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedAccountUpdateWithRatio:\n            return validateFeeDelegatedAccountUpdateWithRatio(tx)\n        case 'SMART_CONTRACT_DEPLOY':\n        case TX_TYPE_STRING.TxTypeSmartContractDeploy:\n            return validateSmartContractDeploy(tx)\n        case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeploy:\n            return validateFeeDelegatedSmartContractDeploy(tx)\n        case 'FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractDeployWithRatio:\n            return validateFeeDelegatedSmartContractDeployWithRatio(tx)\n        case 'SMART_CONTRACT_EXECUTION':\n        case TX_TYPE_STRING.TxTypeSmartContractExecution:\n            return validateSmartContractExecution(tx)\n        case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecution:\n            return validateFeeDelegatedSmartContractExecution(tx)\n        case 'FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedSmartContractExecutionWithRatio:\n            return validateFeeDelegatedSmartContractExecutionWithRatio(tx)\n        case 'CANCEL':\n        case TX_TYPE_STRING.TxTypeCancel:\n            return validateCancel(tx)\n        case 'FEE_DELEGATED_CANCEL':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedCancel:\n            return validateFeeDelegatedCancel(tx)\n        case 'FEE_DELEGATED_CANCEL_WITH_RATIO':\n        case TX_TYPE_STRING.TxTypeFeeDelegatedCancelWithRatio:\n            return validateFeeDelegatedCancelWithRatio(tx)\n        case 'CHAIN_DATA_ANCHORING':\n        case TX_TYPE_STRING.TxTypeChainDataAnchoring:\n            return validateChainDataAnchoring(tx)\n        case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoring:\n            return validateFeeDelegatedChainDataAnchoring(tx)\n        case TX_TYPE_STRING.TxTypeFeeDelegatedChainDataAnchoringWithRatio:\n            return validateFeeDelegatedChainDataAnchoringWithRatio(tx)\n    }\n    return undefined\n}\n\nfunction validateLegacy(transaction) {\n    if (transaction.to === undefined && transaction.data === undefined && transaction.input === undefined) {\n        return new Error('contract creation without any data provided')\n    }\n\n    if (\n        transaction.to &&\n        transaction.to !== '0x' &&\n        transaction.to !== '0x0000000000000000000000000000000000000000' &&\n        !utils.isAddress(transaction.to)\n    ) {\n        return new Error(`Invalid address of to: ${transaction.to}`)\n    }\n\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n\n    if (transaction.humanReadable !== undefined) {\n        return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`)\n    }\n\n    const error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateNonFeeDelegated(transaction) {\n    const type = transaction.type ? transaction.type : 'LEGACY'\n    if (transaction.feePayer !== undefined) {\n        return new Error(`\"feePayer\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.feeRatio !== undefined) {\n        return new Error(`\"feeRatio\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.feePayerSignatures !== undefined) {\n        return new Error(`\"feePayerSignatures\" cannot be used with ${type} transaction`)\n    }\n}\n\nfunction validateFeeDelegated(transaction) {\n    if (transaction.type.includes('WITH_RATIO') || transaction.type.includes('WithRatio')) {\n        if (transaction.feeRatio === undefined) {\n            return new Error('\"feeRatio\" is missing')\n        }\n    } else if (transaction.feeRatio !== undefined) {\n        return new Error(`\"feeRatio\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateNotAccountTransaction(transaction) {\n    const type = transaction.type ? transaction.type : 'LEGACY'\n    if (transaction.account !== undefined) {\n        return new Error(`\"account\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.key !== undefined) {\n        return new Error(`\"key\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.legacyKey !== undefined) {\n        return new Error(`\"legacyKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.publicKey !== undefined) {\n        return new Error(`\"publicKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.multisig !== undefined) {\n        return new Error(`\"multisig\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.roleTransactionKey !== undefined) {\n        return new Error(`\"roleTransactionKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.roleAccountUpdateKey !== undefined) {\n        return new Error(`\"roleAccountUpdateKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.roleFeePayerKey !== undefined) {\n        return new Error(`\"roleFeePayerKey\" cannot be used with ${type} transaction`)\n    }\n    if (transaction.failKey !== undefined) {\n        return new Error(`\"failKey\" cannot be used with ${type} transaction`)\n    }\n}\n\nfunction checkValueTransferEssential(transaction) {\n    if (transaction.to === undefined) {\n        return new Error('\"to\" is missing')\n    }\n    if (!utils.isAddress(transaction.to)) {\n        return new Error(`Invalid address of to: ${transaction.to}`)\n    }\n    if (transaction.value === undefined) {\n        return new Error('\"value\" is missing')\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.data !== undefined) {\n        return new Error(`\"data\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.input !== undefined) {\n        return new Error(`\"input\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.humanReadable !== undefined) {\n        return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateValueTransfer(transaction) {\n    let error = checkValueTransferEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedValueTransfer(transaction) {\n    let error = checkValueTransferEssential(transaction)\n    if (error) return error\n\n    error = validateFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedValueTransferWithRatio(transaction) {\n    return validateFeeDelegatedValueTransfer(transaction)\n}\n\nfunction checkValueTransferMemoEssential(transaction) {\n    if (transaction.to === undefined) {\n        return new Error('\"to\" is missing')\n    }\n    if (!utils.isAddress(transaction.to)) {\n        return new Error(`Invalid address of to: ${transaction.to}`)\n    }\n    if (transaction.value === undefined) {\n        return new Error('\"value\" is missing')\n    }\n\n    if (transaction.input !== undefined && transaction.data !== undefined) {\n        return new Error(`\"data\" and \"input\" cannot be used as properties of transactions at the same time.`)\n    }\n    if (transaction.input === undefined && transaction.data === undefined) {\n        if (transaction.type.includes('TxType')) return new Error('\"input\" is missing')\n        return new Error('\"data\" is missing')\n    }\n\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.humanReadable !== undefined) {\n        return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateValueTransferMemo(transaction) {\n    let error = checkValueTransferMemoEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedValueTransferMemo(transaction) {\n    let error = checkValueTransferMemoEssential(transaction)\n    if (error) return error\n\n    error = validateFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedValueTransferMemoWithRatio(transaction) {\n    return validateFeeDelegatedValueTransferMemo(transaction)\n}\n\nfunction validateAccountTransaction(transaction) {\n    if (transaction.data !== undefined) {\n        return new Error(`\"data\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.input !== undefined) {\n        return new Error(`\"input\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.humanReadable !== undefined) {\n        return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`)\n    }\n\n    // TxTypeAccountUpdate, TxTypeFeeDelegatedAccountUpdate and TxTypeFeeDelegatedAccountUpdateWithRatio transaction use 'account' only\n    if (transaction.type.includes('TxType')) {\n        if (!transaction.account) return new Error(`Missing account information with ${transaction.type} transaction`)\n\n        if (transaction.key !== undefined) {\n            return new Error(`\"key\" cannot be used with ${transaction.type} transaction.`)\n        }\n        if (transaction.legacyKey !== undefined) {\n            return new Error(`\"legacyKey\" cannot be used with ${transaction.type} transaction.`)\n        }\n        if (transaction.publicKey) {\n            return new Error(`\"publicKey\" cannot be used with ${transaction.type} transaction.`)\n        }\n        if (transaction.multisig) {\n            return new Error(`\"multisig\" cannot be used with ${transaction.type} transaction.`)\n        }\n        if (transaction.roleTransactionKey) {\n            return new Error(`\"roleTransactionKey\" cannot be used with ${transaction.type} transaction.`)\n        }\n        if (transaction.roleAccountUpdateKey) {\n            return new Error(`\"roleAccountUpdateKey\" cannot be used with ${transaction.type} transaction.`)\n        }\n        if (transaction.roleFeePayerKey) {\n            return new Error(`\"roleFeePayerKey\" cannot be used with ${transaction.type} transaction.`)\n        }\n        if (transaction.failKey !== undefined) {\n            return new Error(`\"failKey\" cannot be used with ${transaction.type} transaction.`)\n        }\n\n        return\n    }\n\n    if (transaction.account) return new Error(`\"account\" cannot be used with ${transaction.type} transaction`)\n\n    const duplicatedKeyInfo = `The key parameter to be used for ${transaction.type} is duplicated.`\n    if (\n        !transaction.key &&\n        transaction.legacyKey === undefined &&\n        !transaction.publicKey &&\n        !transaction.multisig &&\n        !transaction.roleTransactionKey &&\n        !transaction.roleAccountUpdateKey &&\n        !transaction.roleFeePayerKey &&\n        transaction.failKey === undefined\n    ) {\n        return new Error(`Missing key information with ${transaction.type} transaction`)\n    }\n    if (transaction.key) {\n        if (\n            transaction.legacyKey !== undefined ||\n            transaction.publicKey ||\n            transaction.multisig ||\n            transaction.roleTransactionKey ||\n            transaction.roleAccountUpdateKey ||\n            transaction.roleFeePayerKey ||\n            transaction.failKey !== undefined\n        ) {\n            return new Error(duplicatedKeyInfo)\n        }\n    } else if (transaction.legacyKey !== undefined) {\n        if (\n            transaction.publicKey ||\n            transaction.multisig ||\n            transaction.roleTransactionKey ||\n            transaction.roleAccountUpdateKey ||\n            transaction.roleFeePayerKey ||\n            transaction.failKey !== undefined\n        ) {\n            return new Error(duplicatedKeyInfo)\n        }\n    } else if (transaction.publicKey) {\n        if (\n            transaction.multisig ||\n            transaction.roleTransactionKey ||\n            transaction.roleAccountUpdateKey ||\n            transaction.roleFeePayerKey ||\n            transaction.failKey !== undefined\n        ) {\n            return new Error(duplicatedKeyInfo)\n        }\n    } else if (transaction.multisig) {\n        if (\n            transaction.roleTransactionKey ||\n            transaction.roleAccountUpdateKey ||\n            transaction.roleFeePayerKey ||\n            transaction.failKey !== undefined\n        ) {\n            return new Error(duplicatedKeyInfo)\n        }\n    } else if (transaction.failKey !== undefined) {\n        if (transaction.roleTransactionKey || transaction.roleAccountUpdateKey || transaction.roleFeePayerKey) {\n            return new Error(duplicatedKeyInfo)\n        }\n    }\n}\n\nfunction checkUpdateEssential(transaction) {\n    if (transaction.to !== undefined) {\n        return new Error(`\"to\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.value !== undefined) {\n        return new Error(`\"value\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateAccountUpdate(transaction) {\n    let error = checkUpdateEssential(transaction)\n    if (error) return error\n\n    error = validateAccountTransaction(transaction)\n    if (error) return error\n\n    return validateNonFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedAccountUpdate(transaction) {\n    let error = checkUpdateEssential(transaction)\n    if (error) return error\n\n    error = validateAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedAccountUpdateWithRatio(transaction) {\n    return validateFeeDelegatedAccountUpdate(transaction)\n}\n\nfunction checkDeployEssential(transaction) {\n    if (transaction.value === undefined && !transaction.type.includes('TxType')) {\n        return new Error('\"value\" is missing')\n    }\n\n    if (transaction.input !== undefined && transaction.data !== undefined && !transaction.type.includes('TxType')) {\n        return new Error(`\"data\" and \"input\" cannot be used as properties of transactions at the same time.`)\n    }\n    if (transaction.input === undefined && transaction.data === undefined) {\n        if (transaction.type.includes('TxType')) return new Error('\"input\" is missing')\n        return new Error('\"data\" is missing')\n    }\n\n    if (transaction.to !== undefined && transaction.to !== '0x') {\n        return new Error(`\"to\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.codeFormat !== undefined && !validateCodeFormat(transaction.codeFormat)) {\n        return new Error(`The codeFormat(${transaction.codeFormat}) is invalid.`)\n    }\n    if (transaction.humanReadable !== undefined && transaction.humanReadable === true) {\n        return new Error('HumanReadableAddress is not supported yet.')\n    }\n}\n\nfunction validateSmartContractDeploy(transaction) {\n    let error = checkDeployEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedSmartContractDeploy(transaction) {\n    let error = checkDeployEssential(transaction)\n    if (error) return error\n\n    error = validateNotAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedSmartContractDeployWithRatio(transaction) {\n    return validateFeeDelegatedSmartContractDeploy(transaction)\n}\n\nfunction checkExecutionEssential(transaction) {\n    if (transaction.to === undefined) {\n        return new Error('\"to\" is missing')\n    }\n    if (!utils.isAddress(transaction.to)) {\n        return new Error(`Invalid address of to: ${transaction.to}`)\n    }\n\n    if (transaction.input !== undefined && transaction.data !== undefined) {\n        return new Error(`\"data\" and \"input\" cannot be used as properties of transactions at the same time.`)\n    }\n    if (transaction.input === undefined && transaction.data === undefined) {\n        if (transaction.type.includes('TxType')) return new Error('\"input\" is missing')\n        return new Error('\"data\" is missing')\n    }\n\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.humanReadable !== undefined) {\n        return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateSmartContractExecution(transaction) {\n    let error = checkExecutionEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedSmartContractExecution(transaction) {\n    let error = checkExecutionEssential(transaction)\n    if (error) return error\n\n    error = validateNotAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n    return validateFeeDelegatedSmartContractExecution(transaction)\n}\n\nfunction checkCacncelEssential(transaction) {\n    if (transaction.to !== undefined) {\n        return new Error(`\"to\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.value !== undefined) {\n        return new Error(`\"value\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.data !== undefined) {\n        return new Error(`\"data\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.input !== undefined) {\n        return new Error(`\"input\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.humanReadable !== undefined) {\n        return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateCancel(transaction) {\n    let error = checkCacncelEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedCancel(transaction) {\n    let error = checkCacncelEssential(transaction)\n    if (error) return error\n\n    error = validateNotAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedCancelWithRatio(transaction) {\n    return validateFeeDelegatedCancel(transaction)\n}\n\nfunction checkChainDataAnchoringEssential(transaction) {\n    if (transaction.input !== undefined && transaction.data !== undefined) {\n        return new Error(`\"data\" and \"input\" cannot be used as properties of transactions at the same time.`)\n    }\n    if (transaction.input === undefined && transaction.data === undefined) {\n        if (transaction.anchoredData !== undefined) {\n            transaction.data = transaction.anchoredData\n            delete transaction.anchoredData\n        } else {\n            if (transaction.type.includes('TxType')) return new Error('\"input\" is missing')\n            return new Error('\"data\" is missing')\n        }\n    }\n\n    if (transaction.value !== undefined) {\n        return new Error(`\"value\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.to !== undefined) {\n        return new Error(`\"to\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.codeFormat !== undefined) {\n        return new Error(`\"codeFormat\" cannot be used with ${transaction.type} transaction`)\n    }\n    if (transaction.humanReadable !== undefined) {\n        return new Error(`\"humanReadable\" cannot be used with ${transaction.type} transaction`)\n    }\n}\n\nfunction validateChainDataAnchoring(transaction) {\n    let error = checkChainDataAnchoringEssential(transaction)\n    if (error) return error\n\n    error = validateNonFeeDelegated(transaction)\n    if (error) return error\n\n    return validateNotAccountTransaction(transaction)\n}\n\nfunction validateFeeDelegatedChainDataAnchoring(transaction) {\n    let error = checkChainDataAnchoringEssential(transaction)\n    if (error) return error\n\n    error = validateNotAccountTransaction(transaction)\n    if (error) return error\n\n    return validateFeeDelegated(transaction)\n}\n\nfunction validateFeeDelegatedChainDataAnchoringWithRatio(transaction) {\n    return validateFeeDelegatedChainDataAnchoring(transaction)\n}\n\nmodule.exports = {\n    validateParams,\n    validateTxType,\n    validateCodeFormat,\n}\n"]},"metadata":{},"sourceType":"script"}