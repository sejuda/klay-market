{"ast":null,"code":"/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst RLP = require('eth-lib/lib/rlp');\n\nconst Bytes = require('eth-lib/lib/bytes');\n\nconst utils = require('../../../../caver-utils');\n\nconst helpers = require('../../../../caver-core-helpers');\n\nconst {\n  CANCEL_TYPE_TAG,\n  FEE_DELEGATED_CANCEL_TYPE_TAG,\n  FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG\n} = helpers.constants;\n\nfunction rlpEncodeForCancel(transaction) {\n  return RLP.encode([RLP.encode([CANCEL_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.from.toLowerCase()]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedCancel(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, from, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_CANCEL_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), from.toLowerCase()]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_CANCEL_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.from.toLowerCase()]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedCancelWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, from, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), from.toLowerCase(), Bytes.fromNat(feeRatio)]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.from.toLowerCase(), Bytes.fromNat(transaction.feeRatio)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForCancel,\n  rlpEncodeForFeeDelegatedCancel,\n  rlpEncodeForFeeDelegatedCancelWithRatio\n};","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/cancel.js"],"names":["RLP","require","Bytes","utils","helpers","CANCEL_TYPE_TAG","FEE_DELEGATED_CANCEL_TYPE_TAG","FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG","constants","rlpEncodeForCancel","transaction","encode","fromNat","nonce","gasPrice","gas","from","toLowerCase","chainId","rlpEncodeForFeeDelegatedCancel","senderRawTransaction","typeDetacehdRawTransaction","slice","v","r","s","rlpDecode","feePayer","rlpEncodeForFeeDelegatedCancelWithRatio","feeRatio","module","exports"],"mappings":"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","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RLP = require('eth-lib/lib/rlp')\nconst Bytes = require('eth-lib/lib/bytes')\nconst utils = require('../../../../caver-utils')\nconst helpers = require('../../../../caver-core-helpers')\n\nconst { CANCEL_TYPE_TAG, FEE_DELEGATED_CANCEL_TYPE_TAG, FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG } = helpers.constants\n\nfunction rlpEncodeForCancel(transaction) {\n    return RLP.encode([\n        RLP.encode([\n            CANCEL_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.from.toLowerCase(),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedCancel(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, from, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_CANCEL_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                from.toLowerCase(),\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_CANCEL_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.from.toLowerCase(),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedCancelWithRatio(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, from, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                from.toLowerCase(),\n                Bytes.fromNat(feeRatio),\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_CANCEL_WITH_RATIO_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.from.toLowerCase(),\n            Bytes.fromNat(transaction.feeRatio),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nmodule.exports = {\n    rlpEncodeForCancel,\n    rlpEncodeForFeeDelegatedCancel,\n    rlpEncodeForFeeDelegatedCancelWithRatio,\n}\n"]},"metadata":{},"sourceType":"script"}