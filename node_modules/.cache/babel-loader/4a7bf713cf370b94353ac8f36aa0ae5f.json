{"ast":null,"code":"/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\nconst RLP = require('eth-lib/lib/rlp');\n\nconst Bytes = require('eth-lib/lib/bytes');\n\nconst utils = require('../../../../caver-utils');\n\nconst helpers = require('../../../../caver-core-helpers');\n\nconst {\n  SMART_CONTRACT_DEPLOY_TYPE_TAG,\n  SMART_CONTRACT_EXECUTION_TYPE_TAG,\n  FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n  FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n  FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n  FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n  CODE_FORMAT_EVM_TAG\n} = helpers.constants;\n\nfunction getCodeFormatTag(codeFormat) {\n  switch (codeFormat) {\n    case 0:\n    case 'EVM':\n      return CODE_FORMAT_EVM_TAG;\n  }\n\n  return CODE_FORMAT_EVM_TAG;\n}\n\nfunction rlpEncodeForContractDeploy(transaction) {\n  return RLP.encode([RLP.encode([SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForContractExecution(transaction) {\n  return RLP.encode([RLP.encode([SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeploy(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, humanReadable, codeFormat, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, humanReadable, codeFormat]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeployWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, humanReadable, feeRatio, codeFormat, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, humanReadable, feeRatio, codeFormat]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'), Bytes.fromNat(transaction.feeRatio), Bytes.fromNat(getCodeFormatTag(transaction.codeFormat))]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecution(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n  if (transaction.senderRawTransaction) {\n    const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`; // eslint-disable-next-line no-unused-vars\n\n    const [nonce, gasPrice, gas, to, value, from, data, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction);\n    return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG, Bytes.fromNat(nonce), Bytes.fromNat(gasPrice), Bytes.fromNat(gas), to.toLowerCase(), Bytes.fromNat(value), from.toLowerCase(), data, Bytes.fromNat(feeRatio)]), transaction.feePayer.toLowerCase(), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n  }\n\n  return RLP.encode([RLP.encode([FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG, Bytes.fromNat(transaction.nonce), Bytes.fromNat(transaction.gasPrice), Bytes.fromNat(transaction.gas), transaction.to.toLowerCase(), Bytes.fromNat(transaction.value || '0x0'), transaction.from.toLowerCase(), transaction.data, Bytes.fromNat(transaction.feeRatio)]), Bytes.fromNat(transaction.chainId || '0x1'), '0x', '0x']);\n}\n\nmodule.exports = {\n  rlpEncodeForContractDeploy,\n  rlpEncodeForFeeDelegatedSmartContractDeploy,\n  rlpEncodeForFeeDelegatedSmartContractDeployWithRatio,\n  rlpEncodeForContractExecution,\n  rlpEncodeForFeeDelegatedSmartContractExecution,\n  rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio\n};","map":{"version":3,"sources":["/Users/mac/Desktop/klay-market/node_modules/caver-js/packages/caver-klay/caver-klay-accounts/src/transactionType/contract.js"],"names":["RLP","require","Bytes","utils","helpers","SMART_CONTRACT_DEPLOY_TYPE_TAG","SMART_CONTRACT_EXECUTION_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG","FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG","CODE_FORMAT_EVM_TAG","constants","getCodeFormatTag","codeFormat","rlpEncodeForContractDeploy","transaction","encode","fromNat","nonce","gasPrice","gas","to","toLowerCase","value","from","data","humanReadable","chainId","rlpEncodeForContractExecution","rlpEncodeForFeeDelegatedSmartContractDeploy","senderRawTransaction","typeDetacehdRawTransaction","slice","v","r","s","rlpDecode","feePayer","rlpEncodeForFeeDelegatedSmartContractDeployWithRatio","feeRatio","rlpEncodeForFeeDelegatedSmartContractExecution","rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio","module","exports"],"mappings":"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","sourcesContent":["/*\n    Copyright 2018 The caver-js Authors\n    This file is part of the caver-js library.\n\n    The caver-js library is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    The caver-js library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with the caver-js. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RLP = require('eth-lib/lib/rlp')\nconst Bytes = require('eth-lib/lib/bytes')\nconst utils = require('../../../../caver-utils')\nconst helpers = require('../../../../caver-core-helpers')\n\nconst {\n    SMART_CONTRACT_DEPLOY_TYPE_TAG,\n    SMART_CONTRACT_EXECUTION_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n    FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n    CODE_FORMAT_EVM_TAG,\n} = helpers.constants\n\nfunction getCodeFormatTag(codeFormat) {\n    switch (codeFormat) {\n        case 0:\n        case 'EVM':\n            return CODE_FORMAT_EVM_TAG\n    }\n    return CODE_FORMAT_EVM_TAG\n}\n\nfunction rlpEncodeForContractDeploy(transaction) {\n    return RLP.encode([\n        RLP.encode([\n            SMART_CONTRACT_DEPLOY_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value),\n            transaction.from.toLowerCase(),\n            transaction.data,\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForContractExecution(transaction) {\n    return RLP.encode([\n        RLP.encode([\n            SMART_CONTRACT_EXECUTION_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value || '0x0'),\n            transaction.from.toLowerCase(),\n            transaction.data,\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeploy(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, to, value, from, data, humanReadable, codeFormat, [[v, r, s]]] = utils.rlpDecode(\n            typeDetacehdRawTransaction\n        )\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                to.toLowerCase(),\n                Bytes.fromNat(value),\n                from.toLowerCase(),\n                data,\n                humanReadable,\n                codeFormat,\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_SMART_CONTRACT_DEPLOY_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value),\n            transaction.from.toLowerCase(),\n            transaction.data,\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractDeployWithRatio(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, to, value, from, data, humanReadable, feeRatio, codeFormat, [[v, r, s]]] = utils.rlpDecode(\n            typeDetacehdRawTransaction\n        )\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                to.toLowerCase(),\n                Bytes.fromNat(value),\n                from.toLowerCase(),\n                data,\n                humanReadable,\n                feeRatio,\n                codeFormat,\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_SMART_CONTRACT_DEPLOY_WITH_RATIO_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value),\n            transaction.from.toLowerCase(),\n            transaction.data,\n            Bytes.fromNat(transaction.humanReadable === true ? '0x1' : '0x0'),\n            Bytes.fromNat(transaction.feeRatio),\n            Bytes.fromNat(getCodeFormatTag(transaction.codeFormat)),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecution(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, to, value, from, data, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                to.toLowerCase(),\n                Bytes.fromNat(value),\n                from.toLowerCase(),\n                data,\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_SMART_CONTRACT_EXECUTION_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value || '0x0'),\n            transaction.from.toLowerCase(),\n            transaction.data,\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nfunction rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio(transaction) {\n    if (transaction.senderRawTransaction) {\n        const typeDetacehdRawTransaction = `0x${transaction.senderRawTransaction.slice(4)}`\n\n        // eslint-disable-next-line no-unused-vars\n        const [nonce, gasPrice, gas, to, value, from, data, feeRatio, [[v, r, s]]] = utils.rlpDecode(typeDetacehdRawTransaction)\n\n        return RLP.encode([\n            RLP.encode([\n                FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n                Bytes.fromNat(nonce),\n                Bytes.fromNat(gasPrice),\n                Bytes.fromNat(gas),\n                to.toLowerCase(),\n                Bytes.fromNat(value),\n                from.toLowerCase(),\n                data,\n                Bytes.fromNat(feeRatio),\n            ]),\n            transaction.feePayer.toLowerCase(),\n            Bytes.fromNat(transaction.chainId || '0x1'),\n            '0x',\n            '0x',\n        ])\n    }\n    return RLP.encode([\n        RLP.encode([\n            FEE_DELEGATED_SMART_CONTRACT_EXECUTION_WITH_RATIO_TYPE_TAG,\n            Bytes.fromNat(transaction.nonce),\n            Bytes.fromNat(transaction.gasPrice),\n            Bytes.fromNat(transaction.gas),\n            transaction.to.toLowerCase(),\n            Bytes.fromNat(transaction.value || '0x0'),\n            transaction.from.toLowerCase(),\n            transaction.data,\n            Bytes.fromNat(transaction.feeRatio),\n        ]),\n        Bytes.fromNat(transaction.chainId || '0x1'),\n        '0x',\n        '0x',\n    ])\n}\n\nmodule.exports = {\n    rlpEncodeForContractDeploy,\n    rlpEncodeForFeeDelegatedSmartContractDeploy,\n    rlpEncodeForFeeDelegatedSmartContractDeployWithRatio,\n\n    rlpEncodeForContractExecution,\n    rlpEncodeForFeeDelegatedSmartContractExecution,\n    rlpEncodeForFeeDelegatedSmartContractExecutionWithRatio,\n}\n"]},"metadata":{},"sourceType":"script"}